{
    "$id": "http://redfish.dmtf.org/schemas/v1/Certificate.json",
    "$ref": "#/definitions/Certificate",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2019 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "definitions": {
        "Certificate": {
            "anyOf": [
                {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/idRef"
                },
                {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Certificate.v1_0_0.json#/definitions/Certificate"
                },
                {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Certificate.v1_0_1.json#/definitions/Certificate"
                },
                {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Certificate.v1_1_0.json#/definitions/Certificate"
                }
            ],
            "deletable": true,
            "description": "The Certificate resource describes a certificate used to prove the identify of a component, account, or service.",
            "insertable": false,
            "longDescription": "This resource shall be used to represent a Certificate for a Redfish implementation.",
            "updatable": false,
            "uris": [
                "/redfish/v1/AccountService/Accounts/{ManagerAccountId}/Certificates/{CertificateId}",
                "/redfish/v1/AccountService/ActiveDirectory/Certificates/{CertificateId}",
                "/redfish/v1/AccountService/LDAP/Certificates/{CertificateId}",
                "/redfish/v1/AccountService/ExternalAccountProviders/{ExternalAccountProviderId}/Certificates/{CertificateId}",
                "/redfish/v1/Managers/{ManagerId}/RemoteAccountService/Accounts/{ManagerAccountId}/Certificates/{CertificateId}",
                "/redfish/v1/Managers/{ManagerId}/RemoteAccountService/ActiveDirectory/Certificates/{CertificateId}",
                "/redfish/v1/Managers/{ManagerId}/RemoteAccountService/LDAP/Certificates/{CertificateId}",
                "/redfish/v1/Managers/{ManagerId}/RemoteAccountService/ExternalAccountProviders/{ExternalAccountProviderId}/Certificates/{CertificateId}",
                "/redfish/v1/Managers/{ManagerId}/NetworkProtocol/HTTPS/Certificates/{CertificateId}",
                "/redfish/v1/Systems/{ComputerSystemId}/Boot/Certificates/{CertificateId}",
                "/redfish/v1/CompositionService/ResourceBlocks/{ResourceBlockId}/Systems/{ComputerSystemId}/Boot/Certificates/{CertificateId}",
                "/redfish/v1/ResourceBlocks/{ResourceBlockId}/Systems/{ComputerSystemId}/Boot/Certificates/{CertificateId}"
            ]
        },
        "CertificateType": {
            "enum": [
                "PEM",
                "PKCS7"
            ],
            "enumDescriptions": {
                "PEM": "A PEM encoded certificate.",
                "PKCS7": "A PEM encoded PKCS7 certificate."
            },
            "enumLongDescriptions": {
                "PEM": "The format of the certificate shall be a Privacy Enhanced Mail (PEM) encoded string, containing structures specified by RFC5280.",
                "PKCS7": "The format of the certificate shall be a Privacy Enhanced Mail (PEM) encoded string, containing structures specified by RFC5280 and RFC2315.  The service may discard additional certificates or other data in the structure."
            },
            "type": "string"
        },
        "KeyUsage": {
            "description": "The usages of a key contained within a certificate.",
            "enum": [
                "DigitalSignature",
                "NonRepudiation",
                "KeyEncipherment",
                "DataEncipherment",
                "KeyAgreement",
                "KeyCertSign",
                "CRLSigning",
                "EncipherOnly",
                "DecipherOnly",
                "ServerAuthentication",
                "ClientAuthentication",
                "CodeSigning",
                "EmailProtection",
                "Timestamping",
                "OCSPSigning"
            ],
            "enumDescriptions": {
                "CRLSigning": "The public key is used for verifying signatures on certificate revocation lists (CLRs).",
                "ClientAuthentication": "The public key is used for TLS WWW client authentication.",
                "CodeSigning": "The public key is used for the signing of executable code.",
                "DataEncipherment": "The public key is used for directly enciphering raw user data without the use of an intermediate symmetric cipher.",
                "DecipherOnly": "The public key could be used for deciphering data while performing key agreement.",
                "DigitalSignature": "The public key is used for verifying digital signatures, other than signatures on certificates and CRLs.",
                "EmailProtection": "The public key is used for email protection.",
                "EncipherOnly": "The public key could be used for enciphering data while performing key agreement.",
                "KeyAgreement": "The public key is used for key agreement.",
                "KeyCertSign": "The public key is used for verifying signatures on public key certificates.",
                "KeyEncipherment": "The public key is used for enciphering private or secret keys.",
                "NonRepudiation": "The public key is used to verify digital signatures, other than signatures on certificates and CRLs, and used to provide a non-repudiation service that protects against the signing entity falsely denying some action.",
                "OCSPSigning": "The public key is used for signing OCSP responses.",
                "ServerAuthentication": "The public key is used for TLS WWW server authentication.",
                "Timestamping": "The public key is used for binding the hash of an object to a time."
            },
            "longDescription": "This type shall contain the usages of a key contained within a certificate as specified by the Key Usage and Extended Key Usage definitions in RFC5280.",
            "type": "string"
        }
    },
    "owningEntity": "DMTF",
    "title": "#Certificate.Certificate"
}