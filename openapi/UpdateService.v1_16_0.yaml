components:
  schemas:
    UpdateService_v1_16_0_Actions:
      additionalProperties: false
      description: The available actions for this resource.
      properties:
        '#UpdateService.Activate':
          $ref: '#/components/schemas/UpdateService_v1_16_0_Activate'
        '#UpdateService.GenerateSSHIdentityKeyPair':
          $ref: '#/components/schemas/UpdateService_v1_16_0_GenerateSSHIdentityKeyPair'
        '#UpdateService.RemoveSSHIdentityKeyPair':
          $ref: '#/components/schemas/UpdateService_v1_16_0_RemoveSSHIdentityKeyPair'
        '#UpdateService.SimpleUpdate':
          $ref: '#/components/schemas/UpdateService_v1_16_0_SimpleUpdate'
        '#UpdateService.StartUpdate':
          $ref: '#/components/schemas/UpdateService_v1_16_0_StartUpdate'
        Oem:
          $ref: '#/components/schemas/UpdateService_v1_16_0_OemActions'
          description: The available OEM-specific actions for this resource.
          x-longDescription: This property shall contain the available OEM-specific
            actions for this resource.
      type: object
      x-longDescription: This type shall contain the available actions for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_Activate:
      additionalProperties: false
      description: This action activates specified software inventory instance.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall activate specified software inventory instance.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
      x-versionAdded: v1_16_0
    UpdateService_v1_16_0_ActivateRequestBody:
      additionalProperties: false
      description: This action activates specified software inventory instance.
      properties:
        Targets:
          description: The target software inventory instances to activate on staged
            devices.
          items:
            $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          type: array
          x-longDescription: This parameter shall contain an array of target software
            inventory instances to activate on staged devices.  The service shall
            activate each software image on all applicable devices.
      required:
      - Targets
      type: object
      x-longDescription: This action shall activate specified software inventory instance.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_ApplyTime:
      enum:
      - Immediate
      - OnReset
      - AtMaintenanceWindowStart
      - InMaintenanceWindowOnReset
      - OnStartUpdateRequest
      - OnTargetReset
      type: string
      x-enumDescriptions:
        AtMaintenanceWindowStart: Apply during an administrator-specified maintenance
          window.
        Immediate: Apply immediately.
        InMaintenanceWindowOnReset: Apply after a reset but within an administrator-specified
          maintenance window.
        OnReset: Apply on a reset.
        OnStartUpdateRequest: Apply when the `StartUpdate` action of the update service
          is invoked.
        OnTargetReset: Apply when the target for the software update is reset.  Targets
          include devices, services, and systems.
      x-enumLongDescriptions:
        AtMaintenanceWindowStart: This value shall indicate the `HttpPushUri`-provided
          software is applied during the maintenance window specified by the `MaintenanceWindowStartTime`
          and `MaintenanceWindowDurationInSeconds` properties.  A service may perform
          resets during this maintenance window.
        Immediate: This value shall indicate the `HttpPushUri`-provided software is
          applied immediately.
        InMaintenanceWindowOnReset: This value shall indicate the `HttpPushUri`-provided
          software is applied during the maintenance window specified by the `MaintenanceWindowStartTime`
          and `MaintenanceWindowDurationInSeconds` properties, and if a reset occurs
          within the maintenance window.
        OnReset: This value shall indicate the `HttpPushUri`-provided software is
          applied when the system or service is reset.
        OnStartUpdateRequest: This value shall indicate the `HttpPushUri`-provided
          software is applied when the `StartUpdate` action of the update service
          is invoked.
        OnTargetReset: This value shall indicate the `HttpPushUri`-provided software
          is applied when the target is reset.
      x-enumVersionAdded:
        OnStartUpdateRequest: v1_11_0
        OnTargetReset: v1_14_0
    UpdateService_v1_16_0_GenerateSSHIdentityKeyPair:
      additionalProperties: false
      description: This action generates a new SSH identity key-pair to be used with
        the `UpdateService` resource.  The generated public key is stored in the `Key`
        resource referenced by the `PublicIdentitySSHKey` property.  Any existing
        key-pair is deleted and replaced by the new key-pair.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall generate a new SSH identity key-pair to
        be used with the `UpdateService` resource.  The service shall store the generated
        public key in the `Key` resource referenced by the `PublicIdentitySSHKey`
        property.  If the `UpdateService` resource already has an associated SSH identity
        key-pair, the service shall delete the key-pair and replace it with the new
        key-pair.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
      x-versionAdded: v1_13_0
    UpdateService_v1_16_0_GenerateSSHIdentityKeyPairRequestBody:
      additionalProperties: false
      description: This action generates a new SSH identity key-pair to be used with
        the `UpdateService` resource.  The generated public key is stored in the `Key`
        resource referenced by the `PublicIdentitySSHKey` property.  Any existing
        key-pair is deleted and replaced by the new key-pair.
      properties:
        Curve:
          $ref: http://redfish.dmtf.org/schemas/v1/Key.yaml#/components/schemas/Key_ECDSACurveType
          description: The curve to use with the SSH key if the `KeyType` parameter
            contains `ECDSA`.
          x-longDescription: This parameter shall contain the curve to use with the
            SSH key.  This parameter shall be required if the `KeyType` parameter
            contains `ECDSA` and shall be rejected for other values.
        KeyLength:
          description: The length of the SSH key, in bits, if the `KeyType` parameter
            contains `RSA`.
          format: int64
          type: integer
          x-longDescription: This parameter shall contain the length of the SSH key,
            in bits.  This parameter shall be required if the `KeyType` parameter
            contains `RSA` and shall be rejected for other values.
        KeyType:
          $ref: http://redfish.dmtf.org/schemas/v1/Key.yaml#/components/schemas/Key_SSHKeyType
          description: The type of SSH key.
          x-longDescription: This parameter shall contain the type of SSH key.
      required:
      - KeyType
      type: object
      x-longDescription: This action shall generate a new SSH identity key-pair to
        be used with the `UpdateService` resource.  The service shall store the generated
        public key in the `Key` resource referenced by the `PublicIdentitySSHKey`
        property.  If the `UpdateService` resource already has an associated SSH identity
        key-pair, the service shall delete the key-pair and replace it with the new
        key-pair.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_HttpPushUriApplyTime:
      additionalProperties: false
      description: The settings for when to apply `HttpPushUri`-provided software.
      properties:
        ApplyTime:
          $ref: '#/components/schemas/UpdateService_v1_16_0_ApplyTime'
          description: The time when to apply the `HttpPushUri`-provided software
            update.
          readOnly: false
          x-longDescription: This property shall indicate the time when to apply the
            `HttpPushUri`-provided software update.
          x-versionAdded: v1_4_0
        MaintenanceWindowDurationInSeconds:
          description: The expiry time, in seconds, of the maintenance window.
          format: int64
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall indicate the end of the maintenance
            window as the number of seconds after the time specified by the `MaintenanceWindowStartTime`
            property.  This property shall be required if the `HttpPushUriApplyTime`
            property value is `AtMaintenanceWindowStart` or `InMaintenanceWindowOnReset`.
          x-units: s
          x-versionAdded: v1_4_0
        MaintenanceWindowStartTime:
          description: The start time of a maintenance window.
          format: date-time
          readOnly: false
          type: string
          x-longDescription: This property shall indicate the date and time when the
            service can start to apply the `HttpPushUri`-provided software as part
            of a maintenance window.  This property shall be required if the `HttpPushUriApplyTime`
            property value is `AtMaintenanceWindowStart` or `InMaintenanceWindowOnReset`.
          x-versionAdded: v1_4_0
      type: object
      x-longDescription: The properties in this object shall contain settings for
        when to apply `HttpPushUri`-provided software.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_HttpPushUriOptions:
      additionalProperties: false
      description: The settings for `HttpPushUri`-provided software updates.
      properties:
        ForceUpdate:
          description: An indication of whether the service should bypass update policies
            when applying the `HttpPushUri`-provided image.
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the service should
            bypass update policies when applying the `HttpPushUri`-provided image,
            such as allowing a component to be downgraded.  Services may contain update
            policies that are never bypassed, such as minimum version enforcement.  If
            this property is not present, it shall be assumed to be `false`.
          x-versionAdded: v1_11_0
        HttpPushUriApplyTime:
          $ref: '#/components/schemas/UpdateService_v1_16_0_HttpPushUriApplyTime'
          description: The settings for when to apply `HttpPushUri`-provided firmware.
          x-longDescription: This property shall contain settings for when to apply
            `HttpPushUri`-provided firmware.
          x-versionAdded: v1_4_0
      type: object
      x-longDescription: The properties in this object shall contain settings and
        requirements of the service for `HttpPushUri`-provided software updates.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_OemActions:
      additionalProperties: true
      description: The available OEM-specific actions for this resource.
      properties: {}
      type: object
      x-longDescription: This type shall contain the available OEM-specific actions
        for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_RemoveSSHIdentityKeyPair:
      additionalProperties: false
      description: This action removes the SSH identity key-pair used with the `UpdateService`
        resource.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall remove the private SSH identity key-pair
        used with the `UpdateService` resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
      x-versionAdded: v1_13_0
    UpdateService_v1_16_0_RemoveSSHIdentityKeyPairRequestBody:
      additionalProperties: false
      description: This action removes the SSH identity key-pair used with the `UpdateService`
        resource.
      properties: {}
      type: object
      x-longDescription: This action shall remove the private SSH identity key-pair
        used with the `UpdateService` resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_SimpleUpdate:
      additionalProperties: false
      description: This action updates software components.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall update installed software components in
        a software image file located at an `ImageURI` parameter-specified URI.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_SimpleUpdateRequestBody:
      additionalProperties: false
      description: This action updates software components.
      properties:
        ForceUpdate:
          description: An indication of whether the service should bypass update policies
            when applying the provided image.  The default is `false`.
          type: boolean
          x-longDescription: This parameter shall indicate whether the service should
            bypass update policies when applying the provided image, such as allowing
            a component to be downgraded.  Services may contain update policies that
            are never bypassed, such as minimum version enforcement.  If the client
            does not provide this parameter, the service shall default this value
            to `false`.
          x-versionAdded: v1_11_0
        ImageURI:
          description: The URI of the software image to install.
          format: uri-reference
          type: string
          x-longDescription: This parameter shall contain an RFC3986-defined URI that
            links to a software image that the update service retrieves to install
            software in that image.  This URI should contain a scheme that describes
            the transfer protocol.  If the `TransferProtocol` parameter is absent
            or not supported, and a transfer protocol is not specified by a scheme
            contained within this URI, the service shall use HTTP to get the image.
        Password:
          description: The password to access the URI specified by the `ImageURI`
            parameter.
          type: string
          x-longDescription: This parameter shall contain the password to access the
            URI specified by the `ImageURI` parameter.
          x-versionAdded: v1_4_0
        Stage:
          description: An indication of whether the service stages the image on target
            devices for a client to activate at a later time.
          type: boolean
          x-longDescription: This parameter shall indicate whether the service stages
            the image on target devices for a client to activate at a later time with
            the `Activate` action on the `SoftwareInventory` resource.  If the client
            does not provide this parameter, the service shall default this value
            to `false`.
          x-versionAdded: v1_16_0
        Targets:
          description: An array of URIs that indicate where to apply the update image.
          format: uri-reference
          items:
            type: string
          type: array
          x-longDescription: This parameter shall contain zero or more URIs that indicate
            where to apply the update image.  These targets should correspond to software
            inventory instances or their related items.  If this parameter is not
            present or contains no targets, the service shall apply the software image
            to all applicable targets, as determined by the service.  If the target
            specifies a device resource, the software image file shall be applied
            to the specified device.  If the target specifies a resource collection,
            the software image shall be applied to each applicable member of the specified
            collection.  If the target resource specifies an `Aggregate` resource,
            the software image file shall be applied to each applicable element of
            the specified aggregate.  If the target resource specifies a `ComputerSystem`
            resource, the software image file shall be applied to the applicable components
            within the specified computer system.
          x-versionAdded: v1_2_0
        TransferProtocol:
          $ref: '#/components/schemas/UpdateService_v1_16_0_TransferProtocolType'
          description: The network protocol that the update service uses to retrieve
            the software image file located at the URI specified by the `ImageURI`
            parameter.  This parameter is ignored if the URI provided in `ImageURI`
            contains a scheme.
          x-longDescription: This parameter shall contain the network protocol that
            the update service shall use to retrieve the software image located at
            the URI specified by the `ImageURI` parameter.  Services should ignore
            this parameter if the URI specified by the `ImageURI` parameter contains
            a scheme.  If this parameter is not provided (or supported), and a transfer
            protocol is not specified by a scheme contained within this URI, the service
            shall use HTTP to retrieve the image.
        Username:
          description: The username to access the URI specified by the `ImageURI`
            parameter.
          type: string
          x-longDescription: This parameter shall contain the username to access the
            URI specified by the `ImageURI` parameter.
          x-versionAdded: v1_4_0
      required:
      - ImageURI
      type: object
      x-longDescription: This action shall update installed software components in
        a software image file located at an `ImageURI` parameter-specified URI.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_StartUpdate:
      additionalProperties: false
      description: This action starts updating all images that have been previously
        invoked using an `OperationApplyTime` value of `OnStartUpdateRequest`.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall start an update of software component that
        have been scheduled with the `OperationApplyTime` value of `OnStartUpdateRequest`.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
      x-versionAdded: v1_7_0
    UpdateService_v1_16_0_StartUpdateRequestBody:
      additionalProperties: false
      description: This action starts updating all images that have been previously
        invoked using an `OperationApplyTime` value of `OnStartUpdateRequest`.
      properties: {}
      type: object
      x-longDescription: This action shall start an update of software component that
        have been scheduled with the `OperationApplyTime` value of `OnStartUpdateRequest`.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_SupportedUpdateImageFormatType:
      enum:
      - PLDMv1_0
      - PLDMv1_1
      - PLDMv1_2
      - PLDMv1_3
      - UEFICapsule
      - VendorDefined
      type: string
      x-enumDescriptions:
        PLDMv1_0: A PLDM for Firmware Update Specification v1.0 image.
        PLDMv1_1: A PLDM for Firmware Update Specification v1.1 image.
        PLDMv1_2: A PLDM for Firmware Update Specification v1.2 image.
        PLDMv1_3: A PLDM for Firmware Update Specification v1.3 image.
        UEFICapsule: The image conforms to the capsule format described in the UEFI
          Specification.
        VendorDefined: A vendor-defined image.
      x-enumLongDescriptions:
        PLDMv1_0: This value shall indicate an image that conforms to the v1.0 image
          format as defined in DMTF DSP0267.
        PLDMv1_1: This value shall indicate an image that conforms to the v1.1 image
          format as defined in DMTF DSP0267.
        PLDMv1_2: This value shall indicate an image that conforms to the v1.2 image
          format as defined in DMTF DSP0267.
        PLDMv1_3: This value shall indicate an image that conforms to the v1.3 image
          format as defined in DMTF DSP0267.
        UEFICapsule: This value shall indicate an image that conforms to the UEFI
          capsule format as defined in the UEFI Specification.
        VendorDefined: This value shall indicate a vendor-defined format.
    UpdateService_v1_16_0_TransferProtocolType:
      enum:
      - CIFS
      - FTP
      - SFTP
      - HTTP
      - HTTPS
      - NSF
      - SCP
      - TFTP
      - OEM
      - NFS
      type: string
      x-enumDeprecated:
        NSF: This value has been deprecated in favor of NFS.
      x-enumDescriptions:
        CIFS: Common Internet File System (CIFS).
        FTP: File Transfer Protocol (FTP).
        HTTP: Hypertext Transfer Protocol (HTTP).
        HTTPS: Hypertext Transfer Protocol Secure (HTTPS).
        NFS: Network File System (NFS).
        NSF: Network File System (NFS).
        OEM: A manufacturer-defined protocol.
        SCP: Secure Copy Protocol (SCP).
        SFTP: SSH File Transfer Protocol (SFTP).
        TFTP: Trivial File Transfer Protocol (TFTP).
      x-enumVersionAdded:
        NFS: v1_3_0
        SFTP: v1_1_0
      x-enumVersionDeprecated:
        NSF: v1_3_0
    UpdateService_v1_16_0_UpdateParameters:
      additionalProperties: false
      description: The update parameters used with `MultipartHttpPushUri` software
        update.
      properties:
        ForceUpdate:
          description: An indication of whether the service should bypass update policies
            when applying the provided image.  The default is `false`.
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the service should
            bypass update policies when applying the provided image, such as allowing
            a component to be downgraded.  Services may contain update policies that
            are never bypassed, such as minimum version enforcement.  If the client
            does not provide this parameter, the service shall default this value
            to `false`.
          x-versionAdded: v1_11_0
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_8_0
        Stage:
          description: An indication of whether the service stages the image on target
            devices for a client to activate at a later time.
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the service stages
            the image on target devices for a client to activate at a later time with
            the `Activate` action on the `SoftwareInventory` resource.  If the client
            does not provide this parameter, the service shall default this value
            to `false`.
          x-versionAdded: v1_16_0
        Targets:
          description: An array of URIs that indicate where to apply the update image.
          format: uri-reference
          items:
            nullable: true
            type: string
          readOnly: false
          type: array
          x-longDescription: This property shall contain zero or more URIs that indicate
            where to apply the update image when using the URI specified by the `MultipartHttpPushUri`
            property to push a software image.  These targets should correspond to
            software inventory instances or their related items.  If this property
            is not present or contains no targets, the service shall apply the software
            image to all applicable targets, as determined by the service.  If the
            target specifies a device resource, the software image file shall be applied
            to the specified device.  If the target specifies a resource collection,
            the software image shall be applied to each applicable member of the specified
            collection.  If the target resource specifies an `Aggregate` resource,
            the software image file shall be applied to each applicable element of
            the specified aggregate.  If the target resource specifies a `ComputerSystem`
            resource, the software image file shall be applied to the applicable components
            within the specified computer system.
          x-versionAdded: v1_6_0
      type: object
      x-longDescription: This type shall contain the update parameters when passing
        the update image when using the URI specified by the `MultipartHttpPushUri`
        property to push a software image.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService_v1_16_0_UpdateService:
      additionalProperties: false
      description: The `UpdateService` schema describes the update service and the
        properties for the service itself with links to collections of firmware and
        software inventory.  The update service also provides methods for updating
        software and firmware of the resources in a Redfish service.
      properties:
        '@odata.context':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_context
        '@odata.etag':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_etag
        '@odata.id':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_id
        '@odata.type':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_type
        Actions:
          $ref: '#/components/schemas/UpdateService_v1_16_0_Actions'
          description: The available actions for this resource.
          x-longDescription: This property shall contain the available actions for
            this resource.
        ClientCertificates:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to a collection of client identity certificates provided
            to the server referenced by the `ImageURI` parameter in `SimpleUpdate`.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `CertificateCollection` that represents the client identity certificates
            that are provided to the server referenced by the `ImageURI` parameter
            in `SimpleUpdate` as part of TLS handshaking.
          x-versionAdded: v1_10_0
        Description:
          oneOf:
          - $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Description
          - enum:
            - null
          readOnly: true
        FirmwareInventory:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: An inventory of firmware.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `SoftwareInventoryCollection`.  The resource collection should
            contain the set of software components generally referred to as platform
            firmware or that does not execute within a host operating system.  Software
            in this collection is generally updated using platform-specific methods
            or utilities.
        HttpPushUri:
          deprecated: true
          description: The URI used to perform an HTTP or HTTPS push update to the
            update service.  The format of the message is vendor-specific.
          format: uri-reference
          readOnly: true
          type: string
          x-deprecatedReason: This property has been deprecated in favor of the `MultipartHttpPushUri`
            property.
          x-longDescription: This property shall contain a URI at which the update
            service supports an HTTP or HTTPS `POST` of a software image for the purpose
            of installing software contained within the image.  Access to this URI
            shall require the same privilege as access to the update service.  If
            the service requires the `Content-Length` header for `POST` requests to
            this URI, the service should return HTTP `411 Length Required` status
            code if the client does not include this header in the `POST` request.  The
            value of this property should not contain a URI of a Redfish resource.  See
            the 'Redfish-defined URIs and relative reference rules' clause in the
            Redfish Specification.
          x-versionAdded: v1_1_0
          x-versionDeprecated: v1_15_0
        HttpPushUriOptions:
          $ref: '#/components/schemas/UpdateService_v1_16_0_HttpPushUriOptions'
          deprecated: true
          description: The options for `HttpPushUri`-provided software updates.
          x-deprecatedReason: This property has been deprecated in favor of the update
            parameters used with `MultipartHttpPushUri`-provided software updates.
          x-longDescription: This property shall contain options and requirements
            of the service for `HttpPushUri`-provided software updates.
          x-versionAdded: v1_4_0
          x-versionDeprecated: v1_15_0
        HttpPushUriOptionsBusy:
          deprecated: true
          description: An indication of whether a client has reserved the `HttpPushUriOptions`
            properties for software updates.
          nullable: true
          readOnly: false
          type: boolean
          x-deprecatedReason: This property has been deprecated in favor of `MultipartHttpPushUri`-provided
            software updates.
          x-longDescription: This property shall indicate whether a client uses the
            `HttpPushUriOptions` properties for software updates.  When a client uses
            any `HttpPushUriOptions` properties for software updates, it should set
            this property to `true`.  When a client no longer uses `HttpPushUriOptions`
            properties for software updates, it should set this property to `false`.  This
            property can provide multiple clients a way to negotiate ownership of
            `HttpPushUriOptions` properties.  Clients can use this property to determine
            whether another client uses `HttpPushUriOptions` properties for software
            updates.  This property has no functional requirements for the service.
          x-versionAdded: v1_4_0
          x-versionDeprecated: v1_15_0
        HttpPushUriTargets:
          deprecated: true
          description: An array of URIs that indicate where to apply the update image.
          format: uri-reference
          items:
            nullable: true
            type: string
          readOnly: false
          type: array
          x-deprecatedReason: This property has been deprecated in favor of the update
            parameters used with `MultipartHttpPushUri`-provided software updates.
          x-longDescription: This property shall contain zero or more URIs that indicate
            where to apply the update image when using the URI specified by the `HttpPushUri`
            property to push a software image.  These targets should correspond to
            software inventory instances or their related items.  If this property
            is not present or contains no targets, the service shall apply the software
            image to all applicable targets, as determined by the service.  If the
            target specifies a device resource, the software image file shall be applied
            to the specified device.  If the target specifies a resource collection,
            the software image shall be applied to each applicable member of the specified
            collection.  If the target resource specifies an `Aggregate` resource,
            the software image file shall be applied to each applicable element of
            the specified aggregate.  If the target resource specifies a `ComputerSystem`
            resource, the software image file shall be applied to the applicable components
            within the specified computer system.
          x-versionAdded: v1_2_0
          x-versionDeprecated: v1_15_0
        HttpPushUriTargetsBusy:
          deprecated: true
          description: An indication of whether any client has reserved the `HttpPushUriTargets`
            property.
          nullable: true
          readOnly: false
          type: boolean
          x-deprecatedReason: This property has been deprecated in favor of `MultipartHttpPushUri`-provided
            software updates.
          x-longDescription: This property shall indicate whether any client has reserved
            the `HttpPushUriTargets` property for firmware updates.  A client should
            set this property to `true` when it uses `HttpPushUriTargets` for firmware
            updates.  A client should set it to `false` when it no longer uses `HttpPushUriTargets`
            for updates.  The property can provide multiple clients a way to negotiate
            ownership of `HttpPushUriTargets` and helps clients determine whether
            another client is using `HttpPushUriTargets` to make firmware updates.  This
            property has no functional requirements for the service.
          x-versionAdded: v1_2_0
          x-versionDeprecated: v1_15_0
        Id:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Id
          readOnly: true
        MaxImageSizeBytes:
          description: The maximum size in bytes of the software update image that
            this service supports.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-longDescription: This property shall indicate the maximum size of the
            software update image that clients can send to this update service.
          x-units: By
          x-versionAdded: v1_5_0
        MultipartHttpPushUri:
          description: The URI used to perform a Redfish Specification-defined multipart
            HTTP or HTTPS push update to the update service.
          format: uri-reference
          readOnly: true
          type: string
          x-longDescription: This property shall contain a URI used to perform a Redfish
            Specification-defined multipart HTTP or HTTPS `POST` of a software image
            for the purpose of installing software contained within the image.  The
            value of this property should not contain a URI of a Redfish resource.  See
            the 'Redfish-defined URIs and relative reference rules' clause in the
            Redfish Specification.
          x-versionAdded: v1_6_0
        Name:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Name
          readOnly: true
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties that this object contains shall conform to the Redfish
            Specification-described requirements.
        PublicIdentitySSHKey:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: A link to the public key that is used with the `SimpleUpdate`
            action for the key-based authentication.  The GenerateSSHIdentityKeyPair
            and RemoveSSHIdentityKeyPair are used to update the key for the `SimpleUpdate`
            action.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource of type
            `Key` that represents the public key that is used with the `SimpleUpdate`
            action for the key-based authentication.  This property shall not be present
            if a key-pair is not available.
          x-versionAdded: v1_13_0
        RemoteServerCertificates:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to a collection of server certificates for the server
            referenced by the `ImageURI` parameter in SimpleUpdate.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `CertificateCollection` that represents the server certificates
            for the server referenced by the `ImageURI` parameter in `SimpleUpdate`.  If
            `VerifyRemoteServerCertificate` is `true`, services shall compare the
            certificates in this collection with the certificate obtained during handshaking
            with the image server in order to verify the identity of the image server
            prior to transferring the image.  If the server cannot be verified, the
            service shall not send the transfer request.  If `VerifyRemoteServerCertificate`
            is `false`, the service shall not perform certificate verification with
            certificates in this collection.  Regardless of the contents of this collection,
            services may perform additional verification based on other factors, such
            as the configuration of the `SecurityPolicy` resource.
          x-versionAdded: v1_9_0
        RemoteServerSSHKeys:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to a collection of keys that can be used to authenticate
            the server referenced by the `ImageURI` parameter in `SimpleUpdate`.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `KeyCollection` that represents the server SSH keys for the server
            referenced by the `ImageURI` Parameter in `SimpleUpdate`.  If `VerifyRemoteServerSSHKey`
            is `true`, services shall compare the keys in this collection with the
            key obtained during handshaking with the image server in order to verify
            the identity of the image server prior to transferring the image.  If
            the server cannot be verified, the service shall not send the transfer
            request.  If `VerifyRemoteServerSSHKey` is `false`, the service shall
            not perform key verification with keys in this collection.
          x-versionAdded: v1_12_0
        ServiceEnabled:
          description: An indication of whether this service is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether this service is
            enabled.
        SoftwareInventory:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: An inventory of software.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `SoftwareInventoryCollection`.  The resource collection should
            contain the set of software components executed in the context of a host
            operating system.  This can include device drivers, applications, or offload
            workloads.  Software in this collection is generally updated using operating
            system-centric methods.
        Status:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Status
          description: The status and health of the resource and its subordinate or
            dependent resources.
          x-longDescription: This property shall contain any status or health properties
            of the resource.
        SupportedUpdateImageFormats:
          description: The image format types supported by the service.
          items:
            oneOf:
            - $ref: '#/components/schemas/UpdateService_v1_16_0_SupportedUpdateImageFormatType'
            - enum:
              - null
          readOnly: true
          type: array
          x-longDescription: This property shall contain the image format types supported
            by the service.
          x-versionAdded: v1_13_0
        UpdateServiceCapabilities:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: A link to the capabilities of the update service.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource of type
            `UpdateServiceCapabilities` that contains the capabilities of the update
            service.
          x-versionAdded: v1_16_0
        VerifyRemoteServerCertificate:
          description: An indication of whether the service will verify the certificate
            of the server referenced by the `ImageURI` parameter in `SimpleUpdate`
            prior to sending the transfer request.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the service will
            verify the certificate of the server referenced by the `ImageURI` parameter
            in `SimpleUpdate` prior to sending the transfer request with the certificates
            found in the collection referenced by the `RemoteServerCertificates` property.  If
            this property is not supported by the service, it shall be assumed to
            be `false`.  This property should default to `false` in order to maintain
            compatibility with older clients.  Regardless of the value of this property,
            services may perform additional verification based on other factors, such
            as the configuration of the `SecurityPolicy` resource.
          x-versionAdded: v1_9_0
        VerifyRemoteServerSSHKey:
          description: An indication of whether the service will verify the SSH key
            of the server referenced by the `ImageURI` parameter in `SimpleUpdate`
            prior to sending the transfer request.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the service will
            verify the SSH key of the server referenced by the `ImageURI` parameter
            in `SimpleUpdate` prior to sending the transfer request with the keys
            found in the collection referenced by the `RemoteServerSSHKeys` property.  If
            this property is not supported by the service, it shall be assumed to
            be `false`.  This property should default to `false` in order to maintain
            compatibility with older clients.
          x-versionAdded: v1_12_0
      required:
      - '@odata.id'
      - '@odata.type'
      - Id
      - Name
      type: object
      x-longDescription: This resource shall represent an update service and the properties
        that affect the service itself for a Redfish implementation.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
title: '#UpdateService.v1_16_0.UpdateService'
x-copyright: Copyright 2014-2025 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright
x-language: en
x-owningEntity: DMTF
x-release: '2025.2'
