components:
  schemas:
    AccountService_v1_17_0_AccountProviderTypes:
      enum:
      - RedfishService
      - ActiveDirectoryService
      - LDAPService
      - OEM
      - TACACSplus
      - OAuth2
      type: string
      x-enumDescriptions:
        ActiveDirectoryService: An external Active Directory service.
        LDAPService: A generic external LDAP service.
        OAuth2: An external OAuth 2.0 service.
        OEM: An OEM-specific external authentication or directory service.
        RedfishService: An external Redfish service.
        TACACSplus: An external TACACS+ service.
      x-enumLongDescriptions:
        ActiveDirectoryService: The external account provider shall be a Microsoft
          Active Directory Technical Specification-conformant service.  The `ServiceAddresses`
          property shall contain fully qualified domain names (FQDN) or NetBIOS names
          that link to the domain servers for the Active Directory service.
        LDAPService: The external account provider shall be an RFC4511-conformant
          service.  The `ServiceAddresses` property shall contain RFC3986-defined
          URIs in the format `scheme://host:port`, where `scheme://` and `:port` are
          optional, that link to the LDAP servers for the service.  If the scheme
          is not specified, services shall assume it is `ldaps://`.  If the port is
          not specified, services shall assume it is `636`.  For example, `ldaps://contoso.com:636`
          or `contoso.com`.
        OAuth2: The external account provider shall be an RFC6749-conformant service.  The
          `ServiceAddresses` property shall contain RFC3986-defined URIs that correspond
          to the RFC8414-defined metadata for the OAuth 2.0 service.  For example,
          `https://contoso.org/.well-known/oauth-authorization-server`.
        RedfishService: The external account provider shall be a DMTF Redfish Specification-conformant
          service.  The `ServiceAddresses` property shall contain URIs to `AccountService`
          resources that correspond to Redfish services.  For example, `https://192.168.1.50/redfish/v1/AccountService`.
        TACACSplus: The external account provider shall be an RFC8907-conformant service.  The
          `ServiceAddresses` property shall contain RFC3986-defined URIs in the format
          `host:port` that correspond to the TACACS+ services.
      x-enumVersionAdded:
        OAuth2: v1_10_0
        TACACSplus: v1_8_0
    AccountService_v1_17_0_AccountService:
      additionalProperties: false
      description: The `AccountService` schema defines an account service.  The properties
        are common to, and enable management of, all user accounts.  The properties
        include the password requirements and control features, such as account lockout.  Properties
        and actions in this service specify general behavior that should be followed
        for typical accounts, however implementations might override these behaviors
        for special accounts or situations to avoid denial of service or other deadlock
        situations.
      properties:
        '@odata.context':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_context
        '@odata.etag':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_etag
        '@odata.id':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_id
        '@odata.type':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_type
        AccountLockoutCounterResetAfter:
          description: The period of time, in seconds, between the last failed login
            attempt and the reset of the lockout threshold counter.  This value must
            be less than or equal to the `AccountLockoutDuration` value.  A reset
            sets the counter to `0`.
          format: int64
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the period of time, in seconds,
            from the last failed login attempt when the `AccountLockoutThreshold`
            counter, which counts the number of failed login attempts, is reset to
            `0`.  Then, `AccountLockoutThreshold` failures are required before the
            account is locked.  This value shall be less than or equal to the `AccountLockoutDuration`
            value.  The threshold counter also resets to `0` after each successful
            login.  If the `AccountLockoutCounterResetEnabled` value is `false`, this
            property shall be ignored.
          x-units: s
        AccountLockoutCounterResetEnabled:
          description: An indication of whether the threshold counter is reset after
            `AccountLockoutCounterResetAfter` expires.  If `true`, it is reset.  If
            `false`, only a successful login resets the threshold counter and if the
            user reaches the `AccountLockoutThreshold` limit, the account will be
            locked out indefinitely and only an administrator-issued reset clears
            the threshold counter.  If this property is absent, the default is `true`.
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the threshold counter
            is reset after the `AccountLockoutCounterResetAfter` expires.  If `true`,
            it is reset.  If `false`, only a successful login resets the threshold
            counter and if the user reaches the `AccountLockoutThreshold` limit, the
            account shall be locked out indefinitely and only an administrator-issued
            reset clears the threshold counter.  If this property is absent, the default
            is `true`.
          x-versionAdded: v1_5_0
        AccountLockoutDuration:
          description: The period of time, in seconds, that an account is locked after
            the number of failed login attempts reaches the account lockout threshold,
            within the period between the last failed login attempt and the reset
            of the lockout threshold counter.  If this value is `0`, no lockout will
            occur.  If the `AccountLockoutCounterResetEnabled` value is `false`, this
            property is ignored.
          format: int64
          minimum: 0
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the period of time, in seconds,
            that an account is locked after the number of failed login attempts reaches
            the `AccountLockoutThreshold` value, within the `AccountLockoutCounterResetAfter`
            window of time.  The value shall be greater than or equal to the `AccountLockoutCounterResetAfter`
            value.  If this value is `0`, no lockout shall occur.  If `AccountLockoutCounterResetEnabled`
            value is `false`, this property shall be ignored.
          x-units: s
        AccountLockoutThreshold:
          description: The number of allowed failed login attempts before a user account
            is locked for a specified duration.  If `0`, the account is never locked.
          format: int64
          minimum: 0
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the threshold of failed login
            attempts before a user account is locked.  If `0`, the account shall never
            be locked.
        Accounts:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The collection of manager accounts.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `ManagerAccountCollection`.
        Actions:
          $ref: '#/components/schemas/AccountService_v1_17_0_Actions'
          description: The available actions for this resource.
          x-longDescription: This property shall contain the available actions for
            this resource.
          x-versionAdded: v1_2_0
        ActiveDirectory:
          $ref: '#/components/schemas/AccountService_v1_17_0_ExternalAccountProvider'
          description: The first Active Directory external account provider that this
            account service supports.
          x-longDescription: This property shall contain the first Active Directory
            external account provider that this account service supports.  If the
            account service supports one or more Active Directory services as an external
            account provider, this entity shall be populated by default.  This entity
            shall not be present in the additional external account providers resource
            collection.
          x-versionAdded: v1_3_0
        AdditionalExternalAccountProviders:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The additional external account providers that this account
            service uses.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `ExternalAccountProviderCollection` that represents the additional
            external account providers that this account service uses.
          x-uriSegment: ExternalAccountProviders
          x-versionAdded: v1_3_0
        AuthFailureLoggingThreshold:
          description: The number of authorization failures per account that are allowed
            before the failed attempt is logged to the manager log.
          format: int64
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the threshold for when an
            authorization failure is logged.  Logging shall occur after every `n`
            occurrences of an authorization failure on the same account, where `n`
            represents the value of this property.  If the value is `0`, logging of
            authorization failures shall be disabled.
        Description:
          oneOf:
          - $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Description
          - enum:
            - null
          readOnly: true
        EnforcePasswordHistoryCount:
          description: The number of unique new passwords that need to be associated
            with a user account before a previous password is accepted when modifying
            the password.  If `0`, a user does not need to provide a unique new password.
          format: int64
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the number of unique new
            passwords that need to be associated with a user account before a previous
            password is accepted when modifying the password.  If not `0`, services
            shall reject modification requests of the `Password` property and `ChangePassword`
            actions that contain a previously used password in the specified count.  If
            `0`, services shall not require the user to provide a unique new password.  This
            property does not apply to accounts from external account providers.
          x-versionAdded: v1_17_0
        HTTPBasicAuth:
          description: Indicates if HTTP Basic authentication is enabled for this
            service.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_BasicAuthState'
          - enum:
            - null
          readOnly: false
          x-longDescription: This property shall indicate whether clients are able
            to authenticate to the Redfish service with HTTP Basic authentication.  This
            property should default to `Enabled` for client compatibility.  If this
            property is not present in responses, the value shall be assumed to be
            `Enabled`.
          x-versionAdded: v1_15_0
        Id:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Id
          readOnly: true
        LDAP:
          $ref: '#/components/schemas/AccountService_v1_17_0_ExternalAccountProvider'
          description: The first LDAP external account provider that this account
            service supports.
          x-longDescription: This property shall contain the first LDAP external account
            provider that this account service supports.  If the account service supports
            one or more LDAP services as an external account provider, this entity
            shall be populated by default.  This entity shall not be present in the
            additional external account providers resource collection.
          x-versionAdded: v1_3_0
        LocalAccountAuth:
          $ref: '#/components/schemas/AccountService_v1_17_0_LocalAccountAuth'
          description: An indication of how the service uses the accounts collection
            within this account service as part of authentication.  The enumerated
            values describe the details for each mode.
          readOnly: false
          x-longDescription: This property shall govern how the service uses the manager
            accounts resource collection within this account service as part of authentication.  The
            enumerated values describe the details for each mode.
          x-versionAdded: v1_3_0
        MaxPasswordLength:
          description: The maximum password length for this account service.
          format: int64
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the maximum password length
            that the implementation allows for this account service.  This property
            does not apply to accounts from external account providers.
        MinPasswordLength:
          description: The minimum password length for this account service.
          format: int64
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the minimum password length
            that the implementation allows for this account service.  This property
            does not apply to accounts from external account providers.
        MultiFactorAuth:
          description: The multi-factor authentication settings that this account
            service supports.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_MultiFactorAuth'
          - enum:
            - null
          x-longDescription: This property shall contain the multi-factor authentication
            settings that this account service supports.
          x-versionAdded: v1_12_0
        Name:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Name
          readOnly: true
        OAuth2:
          description: The first OAuth 2.0 external account provider that this account
            service supports.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_ExternalAccountProvider'
          - enum:
            - null
          x-longDescription: This property shall contain the first OAuth 2.0 external
            account provider that this account service supports.  If the account service
            supports one or more OAuth 2.0 services as an external account provider,
            this entity shall be populated by default.  This entity shall not be present
            in the additional external account providers resource collection.
          x-versionAdded: v1_10_0
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties that this object contains shall conform to the Redfish
            Specification-described requirements.
        OutboundConnections:
          description: The collection of outbound connection configurations.
          oneOf:
          - $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          - enum:
            - null
          x-longDescription: This property shall contain a resource collection of
            type `OutboundConnectionCollection`.
          x-versionAdded: v1_14_0
        PasswordExpirationDays:
          description: The number of days before account passwords in this account
            service will expire.
          format: int64
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the number of days before
            account passwords in this account service will expire.  The value shall
            be applied during account creation and password modification unless the
            `PasswordExpiration` property is provided.  The value `null` shall indicate
            that account passwords never expire.  This property does not apply to
            accounts from external account providers.
          x-versionAdded: v1_9_0
        PrivilegeMap:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to the mapping of the privileges required to complete
            a requested operation on a URI associated with this service.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource of type
            `PrivilegeMapping` that contains the privileges that are required for
            a user context to complete a requested operation on a URI associated with
            this service.
          x-versionAdded: v1_1_0
        RequireChangePasswordAction:
          description: An indication of whether clients are required to invoke the
            `ChangePassword` action to modify account passwords.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether clients are required
            to invoke the `ChangePassword` action to modify the `Password` property
            in `ManagerAccount` resources.  If `true`, services shall reject `PATCH`
            and `PUT` requests to modify the `Password` property in `ManagerAccount`
            resources.
          x-versionAdded: v1_14_0
        RestrictedOemPrivileges:
          description: The set of restricted OEM privileges.
          items:
            type: string
          readOnly: true
          type: array
          x-longDescription: This property shall contain an array of OEM privileges
            that are restricted by the service.
          x-versionAdded: v1_8_0
        RestrictedPrivileges:
          description: The set of restricted Redfish privileges.
          items:
            $ref: http://redfish.dmtf.org/schemas/v1/Privileges.yaml#/components/schemas/Privileges_PrivilegeType
          readOnly: true
          type: array
          x-longDescription: This property shall contain an array of Redfish privileges
            that are restricted by the service.
          x-versionAdded: v1_8_0
        Roles:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The collection of Redfish roles.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `RoleCollection`.
        ServiceEnabled:
          description: An indication of whether the account service is enabled.  If
            `true`, it is enabled.  If `false`, it is disabled and users cannot be
            created, deleted, or modified, and new sessions cannot be started.  However,
            established sessions might still continue to run.  Any service, such as
            the session service, that attempts to access the disabled account service
            fails.  However, this does not affect HTTP Basic Authentication connections.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the account service
            is enabled.  If `true`, it is enabled.  If `false`, it is disabled and
            users cannot be created, deleted, or modified, and new sessions cannot
            be started.  However, established sessions may still continue to run.  Any
            service, such as the session service, that attempts to access the disabled
            account service fails.  However, this does not affect HTTP Basic Authentication
            connections.
        Status:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Status
          description: The status and health of the resource and its subordinate or
            dependent resources.
          x-longDescription: This property shall contain any status or health properties
            of the resource.
        SupportedAccountTypes:
          description: The account types supported by the service.
          items:
            $ref: http://redfish.dmtf.org/schemas/v1/ManagerAccount.yaml#/components/schemas/ManagerAccount_AccountTypes
          readOnly: true
          type: array
          x-longDescription: This property shall contain an array of the account types
            supported by the service.
          x-versionAdded: v1_8_0
        SupportedOEMAccountTypes:
          description: The OEM account types supported by the service.
          items:
            type: string
          readOnly: true
          type: array
          x-longDescription: This property shall contain an array of the OEM account
            types supported by the service.
          x-versionAdded: v1_8_0
        TACACSplus:
          description: The first TACACS+ external account provider that this account
            service supports.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_ExternalAccountProvider'
          - enum:
            - null
          x-longDescription: This property shall contain the first TACACS+ external
            account provider that this account service supports.  If the account service
            supports one or more TACACS+ services as an external account provider,
            this entity shall be populated by default.  This entity shall not be present
            in the additional external account providers resource collection.
          x-versionAdded: v1_8_0
      required:
      - '@odata.id'
      - '@odata.type'
      - Id
      - Name
      type: object
      x-longDescription: This resource shall represent an account service for a Redfish
        implementation.  The properties are common to, and enable management of, all
        user accounts.  The properties include the password requirements and control
        features, such as account lockout.  Properties and actions in this service
        specify general behavior that should be followed for typical accounts, however
        implementations may override these behaviors for special accounts or situations
        to avoid denial of service or other deadlock situations.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_Actions:
      additionalProperties: false
      description: The available actions for this resource.
      properties:
        Oem:
          $ref: '#/components/schemas/AccountService_v1_17_0_OemActions'
          description: The available OEM-specific actions for this resource.
          x-longDescription: This property shall contain the available OEM-specific
            actions for this resource.
          x-versionAdded: v1_2_0
      type: object
      x-longDescription: This type shall contain the available actions for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_Authentication:
      additionalProperties: false
      description: The information required to authenticate to the external service.
      properties:
        AuthenticationType:
          description: The type of authentication used to connect to the external
            account provider.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_AuthenticationTypes'
          - enum:
            - null
          readOnly: false
          x-longDescription: This property shall contain the type of authentication
            used to connect to the external account provider.
          x-versionAdded: v1_3_0
        EncryptionKey:
          description: Specifies the encryption key.
          nullable: true
          pattern: ^[0-9a-fA-F]+$
          readOnly: false
          type: string
          writeOnly: true
          x-longDescription: This property shall contain the value of a symmetric
            encryption key for account services that support some form of encryption,
            obfuscation, or authentication such as TACACS+.  The value shall be `null`
            in responses.  The property shall accept a hexadecimal string whose length
            depends on the external account service, such as TACACS+.  A TACACS+ service
            shall use this property to specify the secret key as defined in RFC8907.
          x-versionAdded: v1_8_0
        EncryptionKeySet:
          description: Indicates if the `EncryptionKey` property is set.
          nullable: true
          readOnly: true
          type: boolean
          x-longDescription: This property shall contain `true` if a valid value was
            provided for the `EncryptionKey` property.  Otherwise, the property shall
            contain `false`.  For a TACACS+ service, the value `false` shall indicate
            data obfuscation, as defined in section 4.5 of RFC8907, is disabled.
          x-versionAdded: v1_8_0
        KerberosKeytab:
          description: The Base64-encoded version of the Kerberos keytab for this
            service.  A `PATCH` or `PUT` operation writes the keytab.  This property
            is `null` in responses.
          nullable: true
          readOnly: false
          type: string
          writeOnly: true
          x-longDescription: This property shall contain a Base64-encoded version
            of the Kerberos keytab for this service.  A `PATCH` or `PUT` operation
            writes the keytab.  The value shall be `null` in responses.
          x-versionAdded: v1_3_0
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_3_0
        Password:
          description: The password for this service.  A `PATCH` or `PUT` request
            writes the password.  This property is `null` in responses.
          nullable: true
          readOnly: false
          type: string
          writeOnly: true
          x-longDescription: This property shall contain the password for this service.  A
            `PATCH` or `PUT` operation writes the password.  The value shall be `null`
            in responses.
          x-versionAdded: v1_3_0
        Token:
          description: The token for this service.  A `PATCH` or `PUT` operation writes
            the token.  This property is `null` in responses.
          nullable: true
          readOnly: false
          type: string
          writeOnly: true
          x-longDescription: This property shall contain the token for this service.  A
            `PATCH` or `PUT` operation writes the token.  The value shall be `null`
            in responses.
          x-versionAdded: v1_3_0
        Username:
          description: The username for the service.
          readOnly: false
          type: string
          x-longDescription: This property shall contain the username for this service.
          x-versionAdded: v1_3_0
      type: object
      x-longDescription: This type shall contain the information required to authenticate
        to the external service.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_AuthenticationTypes:
      enum:
      - Token
      - KerberosKeytab
      - UsernameAndPassword
      - OEM
      type: string
      x-enumDescriptions:
        KerberosKeytab: A Kerberos keytab.
        OEM: An OEM-specific authentication mechanism.
        Token: An opaque authentication token.
        UsernameAndPassword: A username and password combination.
    AccountService_v1_17_0_BasicAuthState:
      enum:
      - Enabled
      - Unadvertised
      - Disabled
      type: string
      x-enumDescriptions:
        Disabled: HTTP Basic authentication is disabled.
        Enabled: HTTP Basic authentication is enabled.
        Unadvertised: HTTP Basic authentication is enabled, but is not advertised
          with the `WWW-Authenticate` response header.
      x-enumLongDescriptions:
        Disabled: This value shall indicate that HTTP Basic authentication is disabled
          for the service.
        Enabled: This value shall indicate that HTTP Basic authentication is enabled
          for the service.  The service shall include the `WWW-Authenticate` HTTP
          response header with the value including `Basic` when returning the HTTP
          `401 Unauthorized` status code.
        Unadvertised: This value shall indicate that HTTP Basic authentication is
          enabled for the service.  The service shall not include `Basic` in the value
          of the `WWW-Authenticate` HTTP response header and may omit the header entirely
          from responses.  The lack of advertisement prevents some clients from accessing
          the service with HTTP Basic authentication, such as web browsers.
    AccountService_v1_17_0_CertificateMappingAttribute:
      enum:
      - Whole
      - CommonName
      - UserPrincipalName
      type: string
      x-enumDescriptions:
        CommonName: Match the Common Name (CN) field in the provided certificate to
          the username.
        UserPrincipalName: Match the User Principal Name (UPN) field in the provided
          certificate to the username.
        Whole: Match the whole certificate.
      x-enumLongDescriptions:
        CommonName: This value shall indicate the service matches the RFC5280-defined
          'commonName' attribute in the provided certificate to the `UserName` property
          in a `ManagerAccount` resource or the appropriate field from an external
          account provider.
        UserPrincipalName: This value shall indicate the service matches the User
          Principal Name (UPN) field in the provided certificate to the `UserName`
          property in a `ManagerAccount` resource or the appropriate field from an
          external account provider.
        Whole: This value shall indicate the service matches the entire certificate
          with a `Certificate` resource subordinate to a `ManagerAccount` resource
          or the entire certificate matches the appropriate field from an external
          account provider.
    AccountService_v1_17_0_ClientCertificate:
      additionalProperties: false
      description: Various settings for client certificate authentication such as
        mTLS or CAC/PIV.
      properties:
        CertificateMappingAttribute:
          description: The client certificate attribute to map to a user.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_CertificateMappingAttribute'
          - enum:
            - null
          readOnly: false
          x-longDescription: This property shall contain the client certificate attribute
            to map to a user.
          x-versionAdded: v1_12_0
        Certificates:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to a collection of CA certificates used to validate
            client certificates.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `CertificateCollection` that represents the CA certificates used
            to validate client certificates during TLS handshaking.  Regardless of
            the contents of this collection, services may perform additional verification
            based on other factors, such as the configuration of the `SecurityPolicy`
            resource.  If the service supports the `RevokedCertificates` or `TrustedCertificates`
            properties within the `Server` property within the `TLS` property of the
            `SecurityPolicy` resource, the service shall verify the provided client
            certificate with the `SecurityPolicy` resource prior to verifying it with
            this collection.
          x-versionAdded: v1_12_0
        Enabled:
          description: An indication of whether client certificate authentication
            is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether client certificate
            authentication is enabled.
          x-versionAdded: v1_12_0
        RespondToUnauthenticatedClients:
          description: An indication of whether the service responds to clients that
            do not successfully authenticate.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether the service responds
            to clients that do not successfully authenticate.  If this property is
            not supported by the service, it shall be assumed to be `true`.  See the
            'Client certificate authentication' clause in the Redfish Specification.
          x-versionAdded: v1_12_0
      type: object
      x-longDescription: This type shall contain settings for client certificate authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_ExternalAccountProvider:
      additionalProperties: false
      description: The external account provider services that can provide accounts
        for this manager to use for authentication.
      properties:
        AccountProviderType:
          deprecated: true
          description: The type of external account provider to which this service
            connects.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_AccountProviderTypes'
          - enum:
            - null
          readOnly: true
          x-deprecatedReason: This property is deprecated because the account provider
            type is known when used in the `LDAP` and `ActiveDirectory` objects.
          x-longDescription: This property shall contain the type of external account
            provider to which this service connects.
          x-versionAdded: v1_3_0
          x-versionDeprecated: v1_5_0
        Authentication:
          $ref: '#/components/schemas/AccountService_v1_17_0_Authentication'
          description: The authentication information for the external account provider.
          x-longDescription: This property shall contain the authentication information
            for the external account provider.
          x-versionAdded: v1_3_0
        Certificates:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to a collection of certificates that the external
            account provider uses.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `CertificateCollection` that contains certificates the external
            account provider uses.
          x-versionAdded: v1_4_0
        LDAPService:
          $ref: '#/components/schemas/AccountService_v1_17_0_LDAPService'
          description: The additional mapping information needed to parse a generic
            LDAP service.
          x-longDescription: This property shall contain any additional mapping information
            needed to parse a generic LDAP service.  This property should only be
            present inside the `LDAP` property.
          x-versionAdded: v1_3_0
        OAuth2Service:
          description: The additional information needed to parse an OAuth 2.0 service.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_OAuth2Service'
          - enum:
            - null
          x-longDescription: This property shall contain additional information needed
            to parse an OAuth 2.0 service.  This property should only be present inside
            an `OAuth2` property.
          x-versionAdded: v1_10_0
        PasswordSet:
          description: Indicates if the `Password` property is set.
          readOnly: true
          type: boolean
          x-longDescription: This property shall contain `true` if a valid value was
            provided for the `Password` property.  Otherwise, the property shall contain
            `false`.
          x-versionAdded: v1_7_0
        Priority:
          description: The authentication priority for the external account provider.
          format: int64
          minimum: 0
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the assigned priority for
            the specified external account provider.  The value `0` shall indicate
            the highest priority.  Increasing values shall represent decreasing priority.  If
            an external provider does not have a priority assignment or two or more
            external providers have the same priority, the behavior shall be determined
            by the Redfish service.  The priority is used to determine the order of
            authentication and authorization for each external account provider.
          x-versionAdded: v1_8_0
        RemoteRoleMapping:
          description: The mapping rules to convert the external account providers
            account information to the local Redfish role.
          items:
            oneOf:
            - $ref: '#/components/schemas/AccountService_v1_17_0_RoleMapping'
            - enum:
              - null
          type: array
          x-longDescription: This property shall contain a set of the mapping rules
            that are used to convert the external account providers account information
            to the local Redfish role.
          x-versionAdded: v1_3_0
        Retries:
          description: The number of times to retry connecting to an address in the
            `ServiceAddresses` property before attempting the next address in the
            array.
          format: int64
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the number of retries to
            attempt a connection to an address in the `ServiceAddresses` property
            before attempting a connection to the next address in the array or giving
            up.  If this property is not present, the service has internal policies
            for handling retries.
          x-versionAdded: v1_13_0
        ServiceAddresses:
          description: The addresses of the user account providers to which this external
            account provider links.  The format of this field depends on the type
            of external account provider.
          items:
            nullable: true
            type: string
          readOnly: false
          type: array
          x-longDescription: This property shall contain the addresses of the account
            providers to which this external account provider links.  The format of
            this field depends on the type of external account provider.  Each item
            in the array shall contain a single address.  Services can define their
            own behavior for managing multiple addresses.
          x-versionAdded: v1_3_0
        ServiceEnabled:
          description: An indication of whether this service is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether this service is
            enabled.
          x-versionAdded: v1_3_0
        TACACSplusService:
          description: The additional information needed to parse a TACACS+ services.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_TACACSplusService'
          - enum:
            - null
          x-longDescription: This property shall contain additional information needed
            to parse a TACACS+ services.  This property should only be present inside
            a `TACACSplus` property.
          x-versionAdded: v1_8_0
        TimeoutSeconds:
          description: The period of time, in seconds, this account service will wait
            for a response from an address of a user account provider before timing
            out.
          format: int64
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the period of time, in seconds,
            this account service will wait for a response from an address of a user
            account provider before timing out.  If this property is not present,
            the service has internal policies for handling timeouts.
          x-versionAdded: v1_13_0
      type: object
      x-longDescription: This type shall contain properties that represent external
        account provider services that can provide accounts for this manager to use
        for authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_GoogleAuthenticator:
      additionalProperties: false
      description: Various settings for Google Authenticator multi-factor authentication.
      properties:
        Enabled:
          description: An indication of whether multi-factor authentication with Google
            Authenticator is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether multi-factor authentication
            with Google Authenticator is enabled.
          x-versionAdded: v1_12_0
        SecretKey:
          description: The secret key to use when communicating with the Google Authenticator
            server.  This property is `null` in responses.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the client key to use when
            communicating with the Google Authenticator Server.  The value shall be
            `null` in responses.
          x-versionAdded: v1_12_0
        SecretKeySet:
          description: Indicates if the `SecretKey` property is set.
          readOnly: true
          type: boolean
          x-longDescription: This property shall contain `true` if a valid value was
            provided for the `SecretKey` property.  Otherwise, the property shall
            contain `false`.
          x-versionAdded: v1_12_0
      type: object
      x-longDescription: This type shall contain settings for Google Authenticator
        multi-factor authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_LDAPSearchSettings:
      additionalProperties: false
      description: The settings to search a generic LDAP service.
      properties:
        BaseDistinguishedNames:
          description: The base distinguished names to use to search an external LDAP
            service.
          items:
            nullable: true
            type: string
          readOnly: false
          type: array
          x-longDescription: This property shall contain an array of base distinguished
            names to use to search an external LDAP service.
          x-versionAdded: v1_3_0
        EmailAttribute:
          description: The attribute name that contains the LDAP user's email address.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the attribute name that contains
            the LDAP user's email address.  If this value is not set by the user,
            or the property is not present, the value shall be `mail`.
          x-versionAdded: v1_14_0
        GroupNameAttribute:
          description: The attribute name that contains the LDAP group name entry.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the attribute name that contains
            the LDAP group name.
          x-versionAdded: v1_3_0
        GroupsAttribute:
          description: The attribute name that contains the groups for a user on the
            LDAP user entry.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the attribute name that contains
            the groups for an LDAP user entry.
          x-versionAdded: v1_3_0
        SSHKeyAttribute:
          description: The attribute name that contains the LDAP user's SSH public
            key entry.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the attribute name that contains
            the LDAP user's SSH public key.
          x-versionAdded: v1_11_0
        UsernameAttribute:
          description: The attribute name that contains the LDAP username entry.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the attribute name that contains
            the LDAP username.
          x-versionAdded: v1_3_0
      type: object
      x-longDescription: This type shall contain all required settings to search a
        generic LDAP service.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_LDAPService:
      additionalProperties: false
      description: The settings required to parse a generic LDAP service.
      properties:
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_3_0
        SearchSettings:
          $ref: '#/components/schemas/AccountService_v1_17_0_LDAPSearchSettings'
          description: The required settings to search an external LDAP service.
          x-longDescription: This property shall contain the required settings to
            search an external LDAP service.
          x-versionAdded: v1_3_0
      type: object
      x-longDescription: This type shall contain all required settings to parse a
        generic LDAP service.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_LocalAccountAuth:
      enum:
      - Enabled
      - Disabled
      - Fallback
      - LocalFirst
      type: string
      x-enumDescriptions:
        Disabled: The service never authenticates users based on the account service-defined
          accounts collection.
        Enabled: The service authenticates users based on the account service-defined
          accounts collection.
        Fallback: The service authenticates users based on the account service-defined
          accounts collection only if any external account providers are currently
          unreachable.
        LocalFirst: The service first authenticates users based on the account service-defined
          accounts collection.  If authentication fails, the service authenticates
          by using external account providers.
      x-enumLongDescriptions:
        Disabled: The service shall never authenticate users based on the account
          service-defined manager accounts resource collection.
        Enabled: The service shall authenticate users based on the account service-defined
          manager accounts resource collection.
        Fallback: The service shall authenticate users based on the account service-defined
          manager accounts resource collection only if any external account providers
          are currently unreachable.
        LocalFirst: The service shall first authenticate users based on the account
          service-defined manager accounts resource collection.  If authentication
          fails, the service shall authenticate by using external account providers.
      x-enumVersionAdded:
        LocalFirst: v1_6_0
    AccountService_v1_17_0_MFABypass:
      additionalProperties: false
      description: Multi-factor authentication bypass settings.
      properties:
        BypassTypes:
          description: The types of multi-factor authentication this account or role
            mapping is allowed to bypass.
          items:
            oneOf:
            - $ref: http://redfish.dmtf.org/schemas/v1/AccountService.yaml#/components/schemas/AccountService_MFABypassType
            - enum:
              - null
          readOnly: false
          type: array
          x-longDescription: This property shall contain the types of multi-factor
            authentication this account or role mapping is allowed to bypass.  An
            empty array shall indicate this account or role mapping cannot bypass
            any multi-factor authentication types that are currently enabled.
          x-versionAdded: v1_12_0
      type: object
      x-longDescription: This type shall contain multi-factor authentication bypass
        settings.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_MicrosoftAuthenticator:
      additionalProperties: false
      description: Various settings for Microsoft Authenticator multi-factor authentication.
      properties:
        Enabled:
          description: An indication of whether multi-factor authentication with Microsoft
            Authenticator is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether multi-factor authentication
            with Microsoft Authenticator is enabled.
          x-versionAdded: v1_12_0
        SecretKey:
          description: The secret key to use when communicating with the Microsoft
            Authenticator server.  This property is `null` in responses.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the client key to use when
            communicating with the Microsoft Authenticator server.  The value shall
            be `null` in responses.
          x-versionAdded: v1_12_0
        SecretKeySet:
          description: Indicates if the `SecretKey` property is set.
          readOnly: true
          type: boolean
          x-longDescription: This property shall contain `true` if a valid value was
            provided for the `SecretKey` property.  Otherwise, the property shall
            contain `false`.
          x-versionAdded: v1_12_0
      type: object
      x-longDescription: This type shall contain settings for Microsoft Authenticator
        multi-factor authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_MultiFactorAuth:
      additionalProperties: false
      description: Multi-factor authentication settings.
      properties:
        ClientCertificate:
          description: The settings related to client certificate authentication schemes
            such as mTLS or CAC/PIV.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_ClientCertificate'
          - enum:
            - null
          x-longDescription: This property shall contain the settings related to client
            certificate authentication.
          x-versionAdded: v1_12_0
        GoogleAuthenticator:
          description: The settings related to Google Authenticator multi-factor authentication.  For
            generic Time-Based One-Time Password (TOTP) multi-factor authentication,
            use the `TimeBasedOneTimePassword` property.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_GoogleAuthenticator'
          - enum:
            - null
          x-longDescription: This property shall contain the settings related to Google
            Authenticator multi-factor authentication.
          x-versionAdded: v1_12_0
        MicrosoftAuthenticator:
          description: The settings related to Microsoft Authenticator multi-factor
            authentication.  For generic Time-Based One-Time Password (TOTP) multi-factor
            authentication, use the `TimeBasedOneTimePassword` property.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_MicrosoftAuthenticator'
          - enum:
            - null
          x-longDescription: This property shall contain the settings related to Microsoft
            Authenticator multi-factor authentication.
          x-versionAdded: v1_12_0
        OneTimePasscode:
          description: The settings related to one-time passcode (OTP) multi-factor
            authentication.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_OneTimePasscode'
          - enum:
            - null
          x-longDescription: This property shall contain the settings related to one-time
            passcode multi-factor authentication.
          x-versionAdded: v1_14_0
        SecurID:
          description: The settings related to RSA SecurID multi-factor authentication.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_SecurID'
          - enum:
            - null
          x-longDescription: This property shall contain the settings related to RSA
            SecurID multi-factor authentication.
          x-versionAdded: v1_12_0
        TimeBasedOneTimePassword:
          description: The settings related to Time-based One-Time Password (TOTP)
            multi-factor authentication.
          oneOf:
          - $ref: '#/components/schemas/AccountService_v1_17_0_TimeBasedOneTimePassword'
          - enum:
            - null
          x-longDescription: This property shall contain the settings related to RFC6238-defined
            Time-based One-Time Password (TOTP) multi-factor authentication.
          x-versionAdded: v1_16_0
      type: object
      x-longDescription: This type shall contain multi-factor authentication settings.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_OAuth2Mode:
      enum:
      - Discovery
      - Offline
      type: string
      x-enumDescriptions:
        Discovery: OAuth 2.0 service information for token validation is downloaded
          by the service.
        Offline: OAuth 2.0 service information for token validation is configured
          by a client.  Clients should configure the `Issuer` and `OAuthServiceSigningKeys`
          properties for this mode.
      x-enumLongDescriptions:
        Discovery: This value shall indicate the service performs token validation
          from information found at the URIs specified by the `ServiceAddresses` property.  Services
          shall implement a caching method of this information so it's not necessary
          to retrieve metadata and key information for every request containing a
          token.
        Offline: This value shall indicate the service performs token validation from
          properties configured by a client.  Clients should configure the `Issuer`
          and `OAuthServiceSigningKeys` properties for this mode.
    AccountService_v1_17_0_OAuth2Service:
      additionalProperties: false
      description: Various settings to parse an OAuth 2.0 service.
      properties:
        Audience:
          description: The allowable audience strings of the Redfish service.
          items:
            type: string
          readOnly: true
          type: array
          x-longDescription: This property shall contain an array of allowable RFC7519-defined
            audience strings of the Redfish service.  The values shall uniquely identify
            the Redfish service.  For example, a MAC address or UUID for the manager
            can uniquely identify the service.
          x-versionAdded: v1_10_0
        Issuer:
          description: The issuer string of the OAuth 2.0 service.  Clients should
            configure this property if `Mode` contains `Offline`.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the RFC8414-defined issuer
            string of the OAuth 2.0 service.  If the `Mode` property contains the
            value `Discovery`, this property shall contain the value of the `issuer`
            string from the OAuth 2.0 service's metadata and this property shall be
            read-only.  Clients should configure this property if `Mode` contains
            `Offline`.
          x-versionAdded: v1_10_0
        Mode:
          $ref: '#/components/schemas/AccountService_v1_17_0_OAuth2Mode'
          description: The mode of operation for token validation.
          readOnly: false
          x-longDescription: This property shall contain the mode of operation for
            token validation.
          x-versionAdded: v1_10_0
        OAuthServiceSigningKeys:
          description: The Base64-encoded signing keys of the issuer of the OAuth
            2.0 service.  Clients should configure this property if `Mode` contains
            `Offline`.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain a Base64-encoded string of
            the RFC7517-defined signing keys of the issuer of the OAuth 2.0 service.  Services
            shall verify the token provided in the `Authorization` header of the request
            with the value of this property.  If the `Mode` property contains the
            value `Discovery`, this property shall contain the keys found at the URI
            specified by the `jwks_uri` string from the OAuth 2.0 service's metadata
            and this property shall be read-only.  Clients should configure this property
            if `Mode` contains `Offline`.
          x-versionAdded: v1_10_0
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_13_0
      type: object
      x-longDescription: This type shall contain settings for parsing an OAuth 2.0
        service.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_OemActions:
      additionalProperties: true
      description: The available OEM-specific actions for this resource.
      properties: {}
      type: object
      x-longDescription: This type shall contain the available OEM-specific actions
        for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_OneTimePasscode:
      additionalProperties: false
      description: Various settings for one-time passcode (OTP) multi-factor authentication.
      properties:
        Enabled:
          description: An indication of whether multi-factor authentication using
            a one-time passcode is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether multi-factor authentication
            using a one-time passcode is enabled.  The passcode is sent to the delivery
            address associated with the account credentials provided in the request.  If
            the credentials are associated with a `ManagerAccount` resource, the delivery
            address is specified by the `OneTimePasscodeDeliveryAddress` property.  If
            the credentials are associated with a user from an LDAP account provider,
            the delivery address is contained in the LDAP attribute specified by the
            `EmailAttribute` property.  An attempt to create a session when the `Token`
            property is not included in the request shall generate a message sent
            to the delivery address, using the SMTP settings from the Redfish event
            service, containing a one-time passcode.  The service shall accept the
            one-time passcode as the valid value for the `Token` property in the next
            `POST` operation to create a session for the respective account.
          x-versionAdded: v1_14_0
      type: object
      x-longDescription: This type shall contain settings for one-time passcode (OTP)
        multi-factor authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_RoleMapping:
      additionalProperties: false
      description: The mapping rules that are used to convert the external account
        providers account information to the local Redfish role.
      properties:
        LocalAccountTypes:
          description: The list of local services in the manager that the remote user
            or group is allowed to access.
          items:
            oneOf:
            - $ref: http://redfish.dmtf.org/schemas/v1/ManagerAccount.yaml#/components/schemas/ManagerAccount_AccountTypes
            - enum:
              - null
          readOnly: false
          type: array
          x-longDescription: This property shall contain an array of the various local
            manager services that the remote user or group is allowed to access.  This
            shall not include functionality for receiving events or other notifications.  If
            this property is not supported, the value shall be assumed to be an array
            that contains the value `Redfish`.
          x-versionAdded: v1_16_0
        LocalOEMAccountTypes:
          description: The OEM account types for the remote user or group.
          items:
            nullable: true
            type: string
          readOnly: false
          type: array
          x-longDescription: This property shall contain an array of the OEM account
            types for the remote user or group when `LocalAccountTypes` contains `OEM`.
          x-versionAdded: v1_16_0
        LocalRole:
          description: The name of the local Redfish role to which to map the remote
            user or group.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the `RoleId` property value
            within a role resource on this Redfish service to which to map the remote
            user or group.
          x-versionAdded: v1_3_0
        MFABypass:
          description: The multi-factor authentication bypass settings.
          oneOf:
          - $ref: http://redfish.dmtf.org/schemas/v1/AccountService.yaml#/components/schemas/AccountService_MFABypass
          - enum:
            - null
          x-longDescription: This property shall contain the multi-factor authentication
            bypass settings.
          x-versionAdded: v1_12_0
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_3_0
        RemoteGroup:
          description: The name of the remote group, or the remote role in the case
            of a Redfish service, that maps to the local Redfish role to which this
            entity links.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the name of the remote group,
            or the remote role in the case of a Redfish service, that maps to the
            local Redfish role to which this entity links.
          x-versionAdded: v1_3_0
        RemoteUser:
          description: The name of the remote user that maps to the local Redfish
            role to which this entity links.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the name of the remote user
            that maps to the local Redfish role to which this entity links.
          x-versionAdded: v1_3_0
      type: object
      x-longDescription: This type shall contain mapping rules that are used to convert
        the external account providers account information to the local Redfish role.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_SecurID:
      additionalProperties: false
      description: Various settings for RSA SecurID multi-factor authentication.
      properties:
        Certificates:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to a collection of server certificates for the RSA
            SecurID server referenced by the `ServerURI` property.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type `CertificateCollection` that represent the server certificates
            for the RSA SecurID server referenced by the `ServerURI` property.  Regardless
            of the contents of this collection, services may perform additional verification
            based on other factors, such as the configuration of the `SecurityPolicy`
            resource.
          x-versionAdded: v1_12_0
        ClientId:
          description: The client ID to use when communicating with the RSA SecurID
            server.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the client ID to use when
            communicating with the RSA SecurID server.
          x-versionAdded: v1_12_0
        ClientSecret:
          description: The client secret to use when communicating with the RSA SecurID
            server.  This property is `null` in responses.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the client secret to use
            when communicating with the RSA SecurID server.  The value shall be `null`
            in responses.
          x-versionAdded: v1_12_0
        ClientSecretSet:
          description: Indicates if the `ClientSecret` property is set.
          readOnly: true
          type: boolean
          x-longDescription: This property shall contain `true` if a valid value was
            provided for the `ClientSecret` property.  Otherwise, the property shall
            contain `false`.
          x-versionAdded: v1_12_0
        Enabled:
          description: An indication of whether multi-factor authentication with RSA
            SecurID is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether multi-factor authentication
            with RSA SecurID is enabled.
          x-versionAdded: v1_12_0
        ServerURI:
          description: The URI of the RSA SecurID server.
          format: uri-reference
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall contain the URI of the RSA SecurID
            server.
          x-versionAdded: v1_12_0
      type: object
      x-longDescription: This type shall contain settings for RSA SecurID multi-factor
        authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_TACACSplusPasswordExchangeProtocol:
      enum:
      - ASCII
      - PAP
      - CHAP
      - MSCHAPv1
      - MSCHAPv2
      type: string
      x-enumDescriptions:
        ASCII: The ASCII Login method.
        CHAP: The CHAP Login method.
        MSCHAPv1: The MS-CHAP v1 Login method.
        MSCHAPv2: The MS-CHAP v2 Login method.
        PAP: The PAP Login method.
      x-enumLongDescriptions:
        ASCII: This value shall indicate the ASCII Login flow as described under section
          5.4.2 of RFC8907.
        CHAP: This value shall indicate the CHAP Login flow as described under section
          5.4.2 of RFC8907.
        MSCHAPv1: This value shall indicate the MS-CHAP v1 Login flow as described
          under section 5.4.2 of RFC8907.
        MSCHAPv2: This value shall indicate the MS-CHAP v2 Login flow as described
          under section 5.4.2 of RFC8907.
        PAP: This value shall indicate the PAP Login flow as described under section
          5.4.2 of RFC8907.
    AccountService_v1_17_0_TACACSplusService:
      additionalProperties: false
      description: Various settings to parse a TACACS+ service.
      properties:
        AuthorizationService:
          description: The TACACS+ service authorization argument.
          readOnly: false
          type: string
          x-longDescription: This property shall contain the TACACS+ service authorization
            argument as defined by section 8.2 of RFC8907.  If this property is not
            present, the service defines the value to provide to the TACACS+ server.
          x-versionAdded: v1_13_0
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_13_0
        PasswordExchangeProtocols:
          description: Indicates the allowed TACACS+ password exchange protocols.
          items:
            oneOf:
            - $ref: '#/components/schemas/AccountService_v1_17_0_TACACSplusPasswordExchangeProtocol'
            - enum:
              - null
          readOnly: false
          type: array
          x-longDescription: This property shall indicate all the allowed TACACS+
            password exchange protocol described under section 5.4.2 of RFC8907.
          x-versionAdded: v1_8_0
        PrivilegeLevelArgument:
          description: Indicates the name of the TACACS+ argument name in an authorization
            request.
          nullable: true
          readOnly: false
          type: string
          x-longDescription: This property shall specify the name of the argument
            in a TACACS+ Authorization REPLY packet body, as defined in RFC8907, that
            contains the user's privilege level.
          x-versionAdded: v1_8_0
      type: object
      x-longDescription: This type shall contain settings for parsing a TACACS+ service.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    AccountService_v1_17_0_TimeBasedOneTimePassword:
      additionalProperties: false
      description: Various settings for Time-based One-Time Password (TOTP) multi-factor
        authentication.
      properties:
        Enabled:
          description: An indication of whether multi-factor authentication with a
            Time-based One-Time Password (TOTP) is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether multi-factor authentication
            with an RFC6238-defined Time-based One-Time Password (TOTP) is enabled.
          x-versionAdded: v1_16_0
        TimeStepSeconds:
          description: The time step, in seconds, for calculating the one-time password.
          format: int64
          minimum: 1
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the RFC6238-defined time
            step, in seconds, for calculating the one-time password.  If this property
            is not supported by the service, it shall be assumed to be `30`.
          x-versionAdded: v1_16_0
      type: object
      x-longDescription: This type shall contain settings for RFC6238-defined Time-based
        One-Time Password (TOTP) multi-factor authentication.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
title: '#AccountService.v1_17_0.AccountService'
x-copyright: Copyright 2014-2024 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright
x-language: en
x-owningEntity: DMTF
x-release: '2024.4'
