components:
  schemas:
    LicenseService_v1_0_0_Actions:
      additionalProperties: false
      description: The available actions for this resource.
      properties:
        '#LicenseService.Install':
          $ref: '#/components/schemas/LicenseService_v1_0_0_Install'
        Oem:
          $ref: '#/components/schemas/LicenseService_v1_0_0_OemActions'
          description: The available OEM-specific actions for this resource.
          x-longDescription: This property shall contain the available OEM-specific
            actions for this resource.
      type: object
      x-longDescription: This type shall contain the available actions for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    LicenseService_v1_0_0_Install:
      additionalProperties: false
      description: This action installs one or more licenses from a remote file.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall install one or more licenses from a remote
        file.  The service may update an existing License resource.  The `Location`
        header in the response shall contain the URI of the new or updated License
        resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    LicenseService_v1_0_0_InstallRequestBody:
      additionalProperties: false
      description: This action installs one or more licenses from a remote file.
      properties:
        LicenseFileURI:
          description: The URI of the license file to install.
          type: string
          x-longDescription: This parameter shall contain an RFC3986-defined URI that
            links to a file that the license service retrieves to install license
            in that file.  This URI should contain a scheme that describes the transfer
            protocol.  If the TransferProtocol parameter is absent or not supported,
            and a transfer protocol is not specified by a scheme contained within
            this URI, the service shall use HTTP to get the file.
        Password:
          description: The password to access the URI specified by the LicenseFileURI
            parameter.
          type: string
          x-longDescription: This parameter shall represent the password to access
            the URI specified by the LicenseFileURI parameter.
        TransferProtocol:
          $ref: '#/components/schemas/LicenseService_v1_0_0_TransferProtocolType'
          description: The network protocol that the license service uses to retrieve
            the license file located at the URI provided in LicenseFileURI.  This
            parameter is ignored if the URI provided in LicenseFileURI contains a
            scheme.
          x-longDescription: This parameter shall contain the network protocol that
            the license service shall use to retrieve the license file located at
            the LicenseFileURI.  Services should ignore this parameter if the URI
            provided in LicenseFileURI contains a scheme.  If this parameter is not
            provided or supported, and a transfer protocol is not specified by a scheme
            contained within this URI, the service shall use HTTP to retrieve the
            file.
        Username:
          description: The user name to access the URI specified by the LicenseFileURI
            parameter.
          type: string
          x-longDescription: This parameter shall represent the user name to access
            the URI specified by the LicenseFileURI parameter.
      required:
      - LicenseFileURI
      type: object
      x-longDescription: This action shall install one or more licenses from a remote
        file.  The service may update an existing License resource.  The `Location`
        header in the response shall contain the URI of the new or updated License
        resource.
    LicenseService_v1_0_0_LicenseService:
      additionalProperties: false
      description: The LicenseService schema describes the license service and the
        properties for the service itself with a link to the collection of licenses.  The
        license service also provides methods for installing licenses in a Redfish
        service.
      properties:
        '@odata.context':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_context
        '@odata.etag':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_etag
        '@odata.id':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_id
        '@odata.type':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_type
        Actions:
          $ref: '#/components/schemas/LicenseService_v1_0_0_Actions'
          description: The available actions for this resource.
          x-longDescription: This property shall contain the available actions for
            this resource.
        Description:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Description
          nullable: true
          readOnly: true
        Id:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Id
          readOnly: true
        LicenseExpirationWarningDays:
          description: The number of days prior to a license expiration that a warning
            message is sent.  A value of zero indicates no warning message is sent.
          format: int64
          nullable: true
          readOnly: false
          type: integer
          x-longDescription: This property shall contain the number of days prior
            to a license expiration that the service shall send the `DaysBeforeExpiration`
            message from the License Message Registry at least once.  A value of zero
            shall indicate that no warning messages are sent prior to license expiration.
        Licenses:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to the collection of licenses.
          nullable: true
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type LicenseCollection.  When installing a license with a POST operation
            to this collection, the service may update an existing License resource
            instead of creating a new resource.  In these cases, the service shall
            respond with the HTTP `200 OK` status code or HTTP `204 No Content` status
            code and the `Location` header in the response shall contain the URI of
            the updated License resource.
        Name:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Name
          readOnly: true
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Resource_Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties that this object contains shall conform to the Redfish
            Specification-described requirements.
        ServiceEnabled:
          description: An indication of whether this service is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether this service is
            enabled.
      required:
      - '@odata.id'
      - '@odata.type'
      - Id
      - Name
      type: object
      x-longDescription: This resource shall represent an license service and the
        properties that affect the service itself for a Redfish implementation.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    LicenseService_v1_0_0_OemActions:
      additionalProperties: true
      description: The available OEM-specific actions for this resource.
      properties: {}
      type: object
      x-longDescription: This type shall contain the available OEM-specific actions
        for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    LicenseService_v1_0_0_TransferProtocolType:
      enum:
      - CIFS
      - FTP
      - SFTP
      - HTTP
      - HTTPS
      - SCP
      - TFTP
      - OEM
      - NFS
      type: string
      x-enumDescriptions:
        CIFS: Common Internet File System (CIFS).
        FTP: File Transfer Protocol (FTP).
        HTTP: Hypertext Transfer Protocol (HTTP).
        HTTPS: Hypertext Transfer Protocol Secure (HTTPS).
        NFS: Network File System (NFS).
        OEM: A manufacturer-defined protocol.
        SCP: Secure Copy Protocol (SCP).
        SFTP: Secure File Transfer Protocol (SFTP).
        TFTP: Trivial File Transfer Protocol (TFTP).
title: '#LicenseService.v1_0_0.LicenseService'
x-copyright: Copyright 2014-2021 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright
x-owningEntity: DMTF
x-release: '2021.3'
