components:
  schemas:
    Certificate_Certificate:
      $ref: http://redfish.dmtf.org/schemas/v1/Certificate.v1_11_0.yaml#/components/schemas/Certificate_v1_11_0_Certificate
      description: The `Certificate` schema describes a certificate that proves the
        identity of a component, account, or service.
      x-longDescription: This resource shall represent a certificate for a Redfish
        implementation.
    Certificate_CertificateType:
      enum:
      - PEM
      - PEMchain
      - PKCS7
      - PKCS12
      type: string
      x-enumDescriptions:
        PEM: A Privacy Enhanced Mail (PEM)-encoded single certificate.
        PEMchain: A Privacy Enhanced Mail (PEM)-encoded certificate chain.
        PKCS12: A Base64-encoded PKCS12 certificate bundle.
        PKCS7: A Privacy Enhanced Mail (PEM)-encoded PKCS7 certificate.
      x-enumLongDescriptions:
        PEM: This value shall indicate the format of the certificate shall contain
          a Privacy Enhanced Mail (PEM)-encoded string, containing RFC5280-defined
          structures, representing a single certificate.
        PEMchain: This value shall indicate the format of the certificate shall contain
          a Privacy Enhanced Mail (PEM)-encoded string, containing RFC5280-defined
          structures, representing a certificate chain.  When this value is specified,
          the properties of the resource, except for `CertificateString`, shall contain
          the information from the leaf certificate.  When this value is specified,
          `CertificateString` shall contain the entire PEM chain.
        PKCS12: This value shall indicate the format of the certificate shall contain
          a Base64-encoded string, with padding characters, containing RFC7292-defined
          structures, representing a PKCS12 archive of one or more certificates, keys,
          or other cryptographic data.  The service may discard additional certificates
          or other data in the structure.
        PKCS7: The format of the certificate shall contain a Privacy Enhanced Mail
          (PEM)-encoded string, containing RFC5280-defined and RFC2315-defined structures.  The
          service may discard additional certificates or other data in the structure.
      x-enumVersionAdded:
        PEMchain: v1_4_0
        PKCS12: v1_10_0
    Certificate_CertificateUsageType:
      enum:
      - User
      - Web
      - SSH
      - Device
      - Platform
      - BIOS
      - IDevID
      - LDevID
      - IAK
      - LAK
      - EK
      type: string
      x-enumDescriptions:
        BIOS: This certificate is a BIOS certificate like those associated with UEFI.
        Device: This certificate is a device type certificate like those associated
          with SPDM and other standards.
        EK: This certificate is an EK certificate like those associated with TCG TPMs.
        IAK: This certificate is an IAK certificate like those associated with TCG
          TPMs.
        IDevID: This certificate is an IDevID certificate like those associated with
          TCG TPMs.
        LAK: This certificate is an LAK certificate like those associated with TCG
          TPMs.
        LDevID: This certificate is an LDevID certificate like those associated with
          TCG TPMs.
        Platform: This certificate is a platform type certificate like those associated
          with SPDM and other standards.
        SSH: This certificate is used for SSH.
        User: This certificate is a user certificate like those associated with a
          manager account.
        Web: This certificate is a web or HTTPS certificate like those used for event
          destinations.
      x-enumVersionAdded:
        EK: v1_9_0
        IAK: v1_8_0
        IDevID: v1_8_0
        LAK: v1_8_0
        LDevID: v1_8_0
      x-versionAdded: v1_4_0
    Certificate_KeyUsage:
      description: The usages of a key contained within a certificate.
      enum:
      - DigitalSignature
      - NonRepudiation
      - KeyEncipherment
      - DataEncipherment
      - KeyAgreement
      - KeyCertSign
      - CRLSigning
      - EncipherOnly
      - DecipherOnly
      - ServerAuthentication
      - ClientAuthentication
      - CodeSigning
      - EmailProtection
      - Timestamping
      - OCSPSigning
      type: string
      x-enumDescriptions:
        CRLSigning: Verifies signatures on certificate revocation lists (CRLs).
        ClientAuthentication: TLS WWW client authentication.
        CodeSigning: Signs downloadable executable code.
        DataEncipherment: Directly enciphers raw user data without an intermediate
          symmetric cipher.
        DecipherOnly: Deciphers data while performing a key agreement.
        DigitalSignature: Verifies digital signatures, other than signatures on certificates
          and CRLs.
        EmailProtection: Email protection.
        EncipherOnly: Enciphers data while performing a key agreement.
        KeyAgreement: Key agreement.
        KeyCertSign: Verifies signatures on public key certificates.
        KeyEncipherment: Enciphers private or secret keys.
        NonRepudiation: Verifies digital signatures, other than signatures on certificates
          and CRLs, and provides a non-repudiation service that protects against the
          signing entity falsely denying some action.
        OCSPSigning: Signs OCSP responses.
        ServerAuthentication: TLS WWW server authentication.
        Timestamping: Binds the hash of an object to a time.
      x-longDescription: This type shall describe the usages of a key within a certificate,
        as specified by the 'Key Usage' and 'Extended Key Usage' definitions in RFC5280.
title: '#Certificate.Certificate'
x-copyright: Copyright 2014-2025 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright
x-language: en
x-owningEntity: DMTF
