components:
  schemas:
    Actions:
      additionalProperties: false
      description: The available actions for this resource.
      properties:
        '#UpdateService.SimpleUpdate':
          $ref: '#/components/schemas/SimpleUpdate'
        '#UpdateService.StartUpdate':
          $ref: '#/components/schemas/StartUpdate'
        Oem:
          $ref: '#/components/schemas/OemActions'
          description: The available OEM-specific actions for this resource.
          x-longDescription: This property shall contain the available OEM-specific
            actions for this resource.
      type: object
      x-longDescription: This type shall contain the available actions for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    ApplyTime:
      enum:
      - Immediate
      - OnReset
      - AtMaintenanceWindowStart
      - InMaintenanceWindowOnReset
      type: string
      x-enumDescriptions:
        AtMaintenanceWindowStart: Apply during an administrator-specified maintenance
          window.
        Immediate: Apply immediately.
        InMaintenanceWindowOnReset: Apply after a reset but within an administrator-specified
          maintenance window.
        OnReset: Apply on a reset.
      x-enumLongDescriptions:
        AtMaintenanceWindowStart: This value shall indicate the HttpPushUri-provided
          software is applied during the maintenance window specified by the MaintenanceWindowStartTime
          and MaintenanceWindowDurationInSeconds properties.  A service might perform
          resets during this maintenance window.
        Immediate: This value shall indicate the HttpPushUri-provided software is
          applied immediately.
        InMaintenanceWindowOnReset: This value shall indicate the HttpPushUri-provided
          software is applied during the maintenance window specified by the MaintenanceWindowStartTime
          and MaintenanceWindowDurationInSeconds properties, and if a reset occurs
          within the maintenance window.
        OnReset: This value shall indicate the HttpPushUri-provided software is applied
          when the system or service is reset.
    HttpPushUriApplyTime:
      additionalProperties: false
      description: The settings for when to apply HttpPushUri-provided software.
      properties:
        ApplyTime:
          $ref: '#/components/schemas/ApplyTime'
          description: The time when to apply the HttpPushUri-provided software update.
          readOnly: false
          x-longDescription: This property shall indicate the time when to apply the
            HttpPushUri-provided software update.
          x-versionAdded: v1_4_0
        MaintenanceWindowDurationInSeconds:
          description: The expiry time, in seconds, of the maintenance window.
          minimum: 0
          readOnly: false
          type: integer
          x-longDescription: This property shall indicate the end of the maintenance
            window as the number of seconds after the time specified by the HttpPushUriMaintenanceWindowStartTime
            property.  This property shall contain required if the HttpPushUriApplyTime
            property value is `AtMaintenanceWindowStart` or `InMaintenanceWindowOnReset`.
          x-units: s
          x-versionAdded: v1_4_0
        MaintenanceWindowStartTime:
          description: The start time of a maintenance window.
          format: date-time
          readOnly: false
          type: string
          x-longDescription: This property shall indicate the date and time when the
            service can start to apply the HttpPushUri-provided software as part of
            a maintenance window.  This property shall contain required if the HttpPushUriApplyTime
            property value is `AtMaintenanceWindowStart` or `InMaintenanceWindowOnReset`.
          x-versionAdded: v1_4_0
      type: object
      x-longDescription: The properties in this object shall contain settings for
        when to apply HttpPushUri-provided software.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    HttpPushUriOptions:
      additionalProperties: false
      description: The settings for HttpPushUri-provided software updates.
      properties:
        HttpPushUriApplyTime:
          $ref: '#/components/schemas/HttpPushUriApplyTime'
          description: The settings for when to apply HttpPushUri-provided firmware.
          x-longDescription: This property shall contain settings for when to apply
            HttpPushUri-provided firmware.
          x-versionAdded: v1_4_0
      type: object
      x-longDescription: The properties in this object shall contain settings and
        requirements of the service for HttpPushUri-provided software updates.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    OemActions:
      additionalProperties: true
      description: The available OEM-specific actions for this resource.
      properties: {}
      type: object
      x-longDescription: This type shall contain the available OEM-specific actions
        for this resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    SimpleUpdate:
      additionalProperties: false
      description: This action updates software components.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall update installed software components in
        a software image file located at an ImageURI parameter-specified URI.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    SimpleUpdateRequestBody:
      additionalProperties: false
      description: This action updates software components.
      properties:
        ImageURI:
          description: The URI of the software image to install.
          type: string
          x-longDescription: This parameter shall contain an RFC3986-defined URI that
            links to a software image that the update service retrieves to install
            software in that image.  This URI should contain a scheme that describes
            the transfer protocol.  If the TransferProtocol parameter is absent or
            not supported, and a transfer protocol is not specified by a scheme contained
            within this URI, the service shall use HTTP to get the image.
        Password:
          description: The password to access the URI specified by the ImageURI parameter.
          type: string
          x-longDescription: This parameter shall represent the password to access
            the URI specified by the ImageURI parameter.
          x-versionAdded: v1_4_0
        Targets:
          description: An array of URIs that indicate where to apply the update image.
          format: uri-reference
          items:
            type: string
          type: array
          x-longDescription: This array property shall contain zero or more URIs that
            indicate where to apply the update image.  These targets should correspond
            to software inventory instances or their related items.  If this parameter
            is not present or contains no targets, the service shall apply the software
            image to all applicable targets, as determined by the service.
          x-versionAdded: v1_2_0
        TransferProtocol:
          $ref: '#/components/schemas/TransferProtocolType'
          description: The network protocol that the update service uses to retrieve
            the software image file located at the URI provided in ImageURI, if the
            URI does not contain a scheme.
          x-longDescription: This parameter shall contain the network protocol that
            the update service shall use to retreive the software image located at
            the ImageURI.  If this parameter is not provided (or supported), and a
            transfer protocol is not specified by a scheme contained within this URI,
            the service shall use HTTP to retrieve the image.
        Username:
          description: The user name to access the URI specified by the ImageURI parameter.
          type: string
          x-longDescription: This parameter shall represent the user name to access
            the URI specified by the ImageURI parameter.
          x-versionAdded: v1_4_0
      required:
      - ImageURI
      type: object
      x-longDescription: This action shall update installed software components in
        a software image file located at an ImageURI parameter-specified URI.
    StartUpdate:
      additionalProperties: false
      description: This action starts an update of software components.
      properties:
        target:
          description: Link to invoke action
          format: uri-reference
          type: string
        title:
          description: Friendly action name
          type: string
      type: object
      x-longDescription: This action shall start an update of software component that
        have been scheduled with the OperationApplyTime value of `OnStartUpdateRequest`.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
      x-versionAdded: v1_7_0
    StartUpdateRequestBody:
      additionalProperties: false
      description: This action starts an update of software components.
      properties: {}
      type: object
      x-longDescription: This action shall start an update of software component that
        have been scheduled with the OperationApplyTime value of `OnStartUpdateRequest`.
    TransferProtocolType:
      enum:
      - CIFS
      - FTP
      - SFTP
      - HTTP
      - HTTPS
      - NSF
      - SCP
      - TFTP
      - OEM
      - NFS
      type: string
      x-enumDeprecated:
        NSF: This value has been deprecated in favor of NFS.
      x-enumDescriptions:
        CIFS: Common Internet File System (CIFS).
        FTP: File Transfer Protocol (FTP).
        HTTP: Hypertext Transfer Protocol (HTTP).
        HTTPS: Hypertext Transfer Protocol Secure (HTTPS).
        NFS: Network File System (NFS).
        NSF: Network File System (NFS).
        OEM: A manufacturer-defined protocol.
        SCP: Secure Copy Protocol (SCP).
        SFTP: Secure File Transfer Protocol (SFTP).
        TFTP: Trivial File Transfer Protocol (TFTP).
      x-enumVersionAdded:
        NFS: v1_3_0
        SFTP: v1_1_0
      x-enumVersionDeprecated:
        NSF: v1_3_0
    UpdateParameters:
      additionalProperties: false
      description: The update parameters used with MultipartHttpPushUri software update.
      properties:
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_8_0
        Targets:
          description: An array of URIs that indicate where to apply the update image.
          format: uri-reference
          items:
            nullable: true
            type: string
          readOnly: true
          type: array
          x-longDescription: This property shall contain zero or more URIs that indicate
            where to apply the update image when using the URI specified by the MultipartHttpPushUri
            property to push a software image.  These targets should correspond to
            software inventory instances or their related items.  If this property
            is not present or contains no targets, the service shall apply the software
            image to all applicable targets, as determined by the service.
          x-versionAdded: v1_6_0
      type: object
      x-longDescription: This type shall contain the update parameters when passing
        the update image when using the URI specified by the MultipartHttpPushUri
        property to push a software image.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    UpdateService:
      additionalProperties: false
      description: The UpdateService schema describes the update service and the properties
        for the service itself with links to collections of firmware and software
        inventory.  The update service also provides methods for updating software
        and firmware of the resources in a Redfish service.
      properties:
        '@odata.context':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/context
        '@odata.etag':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/etag
        '@odata.id':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/id
        '@odata.type':
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/type
        Actions:
          $ref: '#/components/schemas/Actions'
          description: The available actions for this resource.
          x-longDescription: This property shall contain the available actions for
            this resource.
        Description:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Description
          nullable: true
          readOnly: true
        FirmwareInventory:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/idRef
          description: An inventory of firmware.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type SoftwareInventoryCollection.
        HttpPushUri:
          description: The URI used to perform an HTTP or HTTPS push update to the
            update service.  The format of the message is vendor-specific.
          format: uri-reference
          readOnly: true
          type: string
          x-longDescription: This property shall contain a URI at which the update
            service supports an HTTP or HTTPS POST of a software image for the purpose
            of installing software contained within the image.  Access to this URI
            shall require the same privilege as access to the update service.  If
            the service requires the `Content-Length` header for POST requests to
            this URI, the service should return HTTP 411 if the client does not include
            this header in the POST request.
          x-versionAdded: v1_1_0
        HttpPushUriOptions:
          $ref: '#/components/schemas/HttpPushUriOptions'
          description: The options for HttpPushUri-provided software updates.
          x-longDescription: This property shall contain options and requirements
            of the service for HttpPushUri-provided software updates.
          x-versionAdded: v1_4_0
        HttpPushUriOptionsBusy:
          description: An indication of whether a client has reserved the HttpPushUriOptions
            properties for software updates.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether a client uses the
            HttpPushUriOptions properties for software updates.  When a client uses
            any HttpPushUriOptions properties for software updates, it should set
            this property to `true`.  When a client no longer uses HttpPushUriOptions
            properties for software updates, it should set this property to `false`.  This
            property can provide multiple clients a way to negotiate ownership of
            HttpPushUriOptions properties.  Clients can use this property to determine
            whether another client uses HttpPushUriOptions properties for software
            updates.  This property has no functional requirements for the service.
          x-versionAdded: v1_4_0
        HttpPushUriTargets:
          description: An array of URIs that indicate where to apply the update image.
          format: uri-reference
          items:
            nullable: true
            type: string
          readOnly: false
          type: array
          x-longDescription: This property shall contain zero or more URIs that indicate
            where to apply the update image when using the URI specified by the HttpPushUri
            property to push a software image.  These targets should correspond to
            SoftwareInventory instances or their related items.  If this property
            is not present or contains no targets, the service shall apply the software
            image to all applicable targets, as determined by the service.
          x-versionAdded: v1_2_0
        HttpPushUriTargetsBusy:
          description: An indication of whether any client has reserved the HttpPushUriTargets
            property.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether any client has reserved
            the HttpPushUriTargets property for firmware updates.  A client should
            set this property to `true` when it uses HttpPushUriTargets for firmware
            updates.  A client should set it to `false` when it is no longer uses
            HttpPushUriTargets for updates.  The property can provide multiple clients
            a way to negotiate ownership of HttpPushUriTargets and helps clients determine
            whether another client is using HttpPushUriTargets to make firmware updates.  This
            property has no functional requirements for the service.
          x-versionAdded: v1_2_0
        Id:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Id
          readOnly: true
        MaxImageSizeBytes:
          description: The maximum size in bytes of the software update image that
            this service supports.
          nullable: true
          readOnly: true
          type: integer
          x-longDescription: This property shall indicate the maximum size of the
            software update image that clients can send to this update service.
          x-units: By
          x-versionAdded: v1_5_0
        MultipartHttpPushUri:
          description: The URI used to perform a Redfish Specification-defined Multipart
            HTTP or HTTPS push update to the update service.
          format: uri-reference
          readOnly: true
          type: string
          x-longDescription: This property shall contain a URI used to perform a Redfish
            Specification-defined Multipart HTTP or HTTPS POST of a software image
            for the purpose of installing software contained within the image.
          x-versionAdded: v1_6_0
        Name:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Name
          readOnly: true
        Oem:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Oem
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties that this object contains shall conform to the Redfish
            Specification-described requirements.
        ServiceEnabled:
          description: An indication of whether this service is enabled.
          nullable: true
          readOnly: false
          type: boolean
          x-longDescription: This property shall indicate whether this service is
            enabled.
        SoftwareInventory:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/idRef
          description: An inventory of software.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource collection
            of type SoftwareInventoryCollection.
        Status:
          $ref: http://redfish.dmtf.org/schemas/v1/Resource.yaml#/components/schemas/Status
          description: The status and health of the resource and its subordinate or
            dependent resources.
          x-longDescription: This property shall contain any status or health properties
            of the resource.
      required:
      - '@odata.id'
      - '@odata.type'
      - Id
      - Name
      type: object
      x-longDescription: This resource shall represent an update service and the properties
        that affect the service itself for a Redfish implementation.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
title: '#UpdateService.v1_8_1.UpdateService'
x-copyright: Copyright 2014-2020 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright
x-owningEntity: DMTF
x-release: '2019.4'
