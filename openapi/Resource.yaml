components:
  schemas:
    Resource_Condition:
      additionalProperties: false
      description: A condition that requires attention.
      properties:
        ConditionType:
          description: The type of condition.
          oneOf:
          - $ref: http://redfish.dmtf.org/schemas/v1/Resource.v1_22_0.yaml#/components/schemas/Resource_v1_22_0_ConditionType
          - enum:
            - null
          readOnly: true
          x-longDescription: This property shall contain the type of condition.
          x-versionAdded: v1_22_0
        LogEntry:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: The link to the log entry created for this condition.
          readOnly: true
          x-longDescription: This property shall contain a link to a resource of type
            `LogEntry` that represents the log entry created for this condition.
        Message:
          description: The human-readable message for this condition.
          readOnly: true
          type: string
          x-longDescription: This property shall contain a human-readable message
            describing this condition.
        MessageArgs:
          description: An array of message arguments that are substituted for the
            arguments in the message when looked up in the message registry.
          items:
            type: string
          readOnly: true
          type: array
          x-longDescription: This property shall contain an array of message arguments
            that are substituted for the arguments in the message when looked up in
            the message registry.  It has the same semantics as the `MessageArgs`
            property in the Redfish `MessageRegistry` schema.
        MessageId:
          description: The identifier for the message.
          readOnly: true
          type: string
          x-longDescription: This property shall contain a `MessageId`, as defined
            in the 'MessageId format' clause of the Redfish Specification.
        Oem:
          $ref: '#/components/schemas/Resource_Oem'
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
          x-versionAdded: v1_21_0
        OriginOfCondition:
          $ref: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml#/components/schemas/odata-v4_idRef
          description: A link to the resource or object that originated the condition.
          readOnly: true
          x-longDescription: This property shall contain a link to the resource or
            object that originated the condition.  This property shall not be present
            if the condition was caused by this resource.
        Resolution:
          description: Suggestions on how to resolve the condition.
          readOnly: true
          type: string
          x-longDescription: This property shall contain the resolution of the condition.  Services
            should replace the resolution defined in the message registry with a more
            specific resolution.
          x-versionAdded: v1_14_0
        ResolutionSteps:
          description: The list of recommended steps to resolve the condition.
          items:
            $ref: http://redfish.dmtf.org/schemas/v1/ResolutionStep.yaml#/components/schemas/ResolutionStep_ResolutionStep
          type: array
          x-longDescription: This property shall contain an array of recommended steps
            to resolve the condition.  A client can stop executing the resolution
            steps once the condition is removed from the resource.
          x-versionAdded: v1_18_0
        Severity:
          $ref: '#/components/schemas/Resource_Health'
          description: The severity of the condition.
          readOnly: true
          x-longDescription: This property shall contain the severity of the condition.  Services
            can replace the value defined in the message registry with a value more
            applicable to the implementation.
        Timestamp:
          description: The time the condition occurred.
          format: date-time
          readOnly: true
          type: string
          x-longDescription: This property shall indicate the time the condition occurred.
        UserAuthenticationSource:
          description: The source of authentication for the username property associated
            with the condition.
          nullable: true
          readOnly: true
          type: string
          x-longDescription: This property shall contain the URL to the authentication
            service that is associated with the username property.  This should be
            used for conditions that result from a user action.
          x-versionAdded: v1_20_0
        Username:
          description: The username of the account associated with the condition.
          nullable: true
          readOnly: true
          type: string
          x-longDescription: This property shall contain the username of the account
            associated with the condition.  This should be used for conditions that
            result from a user action.
          x-versionAdded: v1_20_0
      required:
      - MessageId
      type: object
      x-longDescription: This type shall contain the description and details of a
        condition that exists within this resource or a related resource that requires
        attention.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    Resource_Description:
      description: The description of this resource.  Used for commonality in the
        schema definitions.
      type: string
      x-longDescription: This property shall contain the description of this resource.  The
        value shall conform with the 'Description' clause of the Redfish Specification.
    Resource_Health:
      enum:
      - OK
      - Warning
      - Critical
      type: string
      x-enumDescriptions:
        Critical: A critical condition requires immediate attention.
        OK: Normal.
        Warning: A condition requires attention.
    Resource_Id:
      description: The unique identifier for this resource within the collection of
        similar resources.
      type: string
      x-longDescription: This property shall contain the identifier for this resource.  The
        value shall conform with the 'Id' clause of the Redfish Specification.
    Resource_Identifier:
      $ref: http://redfish.dmtf.org/schemas/v1/Resource.v1_22_0.yaml#/components/schemas/Resource_v1_22_0_Identifier
      description: Any additional identifiers for a resource.
      x-longDescription: This type shall contain any additional identifiers for a
        resource.
    Resource_IndicatorLED:
      enum:
      - Lit
      - Blinking
      - 'Off'
      type: string
      x-enumDescriptions:
        Blinking: The indicator LED is blinking.
        Lit: The indicator LED is lit.
        'Off': The indicator LED is off.
      x-enumLongDescriptions:
        Blinking: This value shall represent that the indicator LED is in a blinking
          state where the LED is being turned on and off in repetition.  If the service
          does not support this value, it shall reject `PATCH` or `PUT` requests containing
          this value by returning the HTTP `400 Bad Request` status code.
        Lit: This value shall represent that the indicator LED is in a solid on state.  If
          the service does not support this value, it shall reject `PATCH` or `PUT`
          requests containing this value by returning the HTTP `400 Bad Request` status
          code.
        'Off': This value shall represent that the indicator LED is in a solid off
          state.  If the service does not support this value, it shall reject `PATCH`
          or `PUT` requests containing this value by returning the HTTP `400 Bad Request`
          status code.
    Resource_Item:
      $ref: '#/components/schemas/Resource_Resource'
      description: The base type for resources and members that can be linked to.
    Resource_ItemOrCollection:
      $ref: '#/components/schemas/Resource_ResourceCollection'
    Resource_Links:
      additionalProperties: false
      properties:
        Oem:
          $ref: '#/components/schemas/Resource_Oem'
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
      type: object
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    Resource_Location:
      $ref: http://redfish.dmtf.org/schemas/v1/Resource.v1_22_0.yaml#/components/schemas/Resource_v1_22_0_Location
      description: The location of a resource.
      x-longDescription: This type shall describe the location of a resource.
    Resource_Name:
      description: The name of the resource or array member.
      type: string
      x-longDescription: This property shall contain the name of this resource or
        array member.  The value shall conform with the 'Name' clause of the Redfish
        Specification.
    Resource_Oem:
      additionalProperties: true
      description: The OEM extension.
      properties: {}
      type: object
      x-longDescription: This object represents the OEM properties.  The resource
        values shall comply with the Redfish Specification-described requirements.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
        ^[A-Za-z0-9_]+$:
          $ref: '#/components/schemas/Resource_OemObject'
    Resource_OemObject:
      additionalProperties: true
      description: The base type for an OEM extension.
      properties: {}
      type: object
      x-longDescription: This object represents the base type for an OEM object.  The
        resource values shall comply with the Redfish Specification-described requirements.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    Resource_PowerState:
      enum:
      - 'On'
      - 'Off'
      - PoweringOn
      - PoweringOff
      - Paused
      type: string
      x-enumDescriptions:
        'Off': The resource is powered off.  The components within the resource might
          continue to have AUX power.
        'On': The resource is powered on.
        Paused: The resource is paused.
        PoweringOff: A temporary state between on and off.  The components within
          the resource can take time to process the power off action.
        PoweringOn: A temporary state between off and on.  The components within the
          resource can take time to process the power on action.
      x-enumVersionAdded:
        Paused: v1_13_0
    Resource_ReferenceableMember:
      $ref: http://redfish.dmtf.org/schemas/v1/Resource.v1_22_0.yaml#/components/schemas/Resource_v1_22_0_ReferenceableMember
    Resource_ResetType:
      enum:
      - 'On'
      - ForceOff
      - GracefulShutdown
      - GracefulRestart
      - ForceRestart
      - Nmi
      - ForceOn
      - PushPowerButton
      - PowerCycle
      - Suspend
      - Pause
      - Resume
      - FullPowerCycle
      type: string
      x-enumDescriptions:
        ForceOff: Turn off the unit immediately (non-graceful shutdown).
        ForceOn: Turn on the unit immediately.
        ForceRestart: Shut down immediately and non-gracefully and restart the unit.
        FullPowerCycle: Full power cycle the unit.  Behaves like removing utility
          lines, followed by restoring utility lines to the resource.
        GracefulRestart: Shut down gracefully and restart the unit.
        GracefulShutdown: Shut down gracefully and power off.
        Nmi: Generate a diagnostic interrupt, which is usually an NMI on x86 systems,
          to stop normal operations, complete diagnostic actions, and, typically,
          halt the system.
        'On': Turn on the unit.
        Pause: Pause execution on the unit but do not remove power.  This is typically
          a feature of virtual machine hypervisors.
        PowerCycle: Power cycle the unit.  Behaves like a power removal, followed
          by a power restore to the resource.
        PushPowerButton: Simulate the pressing of the physical power button on this
          unit.
        Resume: Resume execution on the paused unit.  This is typically a feature
          of virtual machine hypervisors.
        Suspend: Write the state of the unit to disk before powering off.  This allows
          for the state to be restored when powered back on.
      x-enumLongDescriptions:
        ForceOff: This value shall indicate the resource will transition to a power
          off state.  The transition will start immediately.  Upon successful completion,
          the `PowerState` property, if supported, shall contain the value `Off`.
        ForceOn: This value shall indicate the resource will transition to a power
          on state.  The transition will start immediately.  Upon successful completion,
          the `PowerState` property shall contain the value `On`.
        ForceRestart: This value shall indicate the resource will transition to a
          power on state, after transiting through a restart.  The transition will
          start immediately.  Upon successful completion, the `PowerState` property,
          if supported, shall contain the value `On`.
        FullPowerCycle: This value shall indicate the resource will perform a full
          power cycle as if utility lines to the resource are removed and restored.  This
          is different from `PowerCycle` in that it's as close to a true power cycle
          as possible.  For example, removing AC power cables from an enclosure and
          then restoring the AC power cables.  If currently in the power on state,
          the resource will transition to a power off state, then transition to a
          power on state.  If currently in the power off state, the resource will
          transition to a power on state.  Upon successful completion, the `PowerState`
          property, if supported, shall contain the value `On`.  If a service supports
          this value but there are no other distinct power cycle flows, the service
          shall support `PowerCycle` as an alias to `FullPowerCycle`.  This type of
          reset may cause the manager providing the Redfish service to power cycle.  If
          the manager providing the Redfish service is affected by this type of reset,
          the service shall send the action response before resetting to prevent client
          timeouts.
        GracefulRestart: This value shall indicate the resource will transition to
          a power on state, after transiting through a restart.  The transition will
          start after first performing tasks to safely shut down the resource.  For
          example, when shutting down a computer system, the host operating system
          is allowed to safely shut down processes and close connections.  Upon successful
          completion, the `PowerState` property, if supported, shall contain the value
          `On`.
        GracefulShutdown: This value shall indicate the resource will transition to
          a power off state.  The transition will start after first performing tasks
          to safely shut down the resource.  For example, when shutting down a computer
          system, the host operating system is allowed to safely shut down processes
          and close connections.  Upon successful completion, the `PowerState` property,
          if supported, shall contain the value `Off`.
        Nmi: This value shall indicate the resource will generate a diagnostic interrupt.
        'On': This value shall indicate the resource will transition to a power on
          state.  Upon successful completion, the `PowerState` property, if supported,
          shall contain the value `On`.
        Pause: This value shall indicate the resource will transition to a paused
          state.  Upon successful completion, the `PowerState` property, if supported,
          shall contain the value `Paused`.
        PowerCycle: This value shall indicate the resource will perform a power cycle.  This
          is different from `FullPowerCycle` in that it typically performs localized
          power sequencing of the resource while external power is still present.  For
          example, turning DC voltage regulators off and then turning DC voltage regulators
          back on.  If currently in the power on state, the resource will transition
          to a power off state, then transition to a power on state.  If currently
          in the power off state, the resource will transition to a power on state.  Upon
          successful completion, the `PowerState` property, if supported, shall contain
          the value `On`.
        PushPowerButton: This value shall indicate the resource will behave as if
          the physical power button is pressed.  The behavior of pressing the physical
          power button may be dependent on the state of the unit and the behavior
          may be configurable.
        Resume: This value shall indicate the resource will transition to a power
          on state.  Upon successful completion, the `PowerState` property, if supported,
          shall contain the value `On`.
        Suspend: This value shall indicate the resource will have any state information
          written to persistent memory and then transition to a power off state.  Upon
          successful completion, the `PowerState` property, if supported, shall contain
          the value `Off`.
      x-enumVersionAdded:
        FullPowerCycle: v1_21_0
        Pause: v1_13_0
        PowerCycle: v1_4_0
        Resume: v1_13_0
        Suspend: v1_13_0
    Resource_Resource:
      $ref: http://redfish.dmtf.org/schemas/v1/Resource.v1_22_0.yaml#/components/schemas/Resource_v1_22_0_Resource
    Resource_ResourceCollection:
      $ref: http://redfish.dmtf.org/schemas/v1/Resource.v1_22_0.yaml#/components/schemas/Resource_v1_22_0_ResourceCollection
    Resource_State:
      enum:
      - Enabled
      - Disabled
      - StandbyOffline
      - StandbySpare
      - InTest
      - Starting
      - Absent
      - UnavailableOffline
      - Deferring
      - Quiesced
      - Updating
      - Qualified
      - Degraded
      type: string
      x-enumDeprecated:
        Qualified: This value has been deprecated in favor of StandbySpare.
      x-enumDescriptions:
        Absent: This function or device is not currently present or detected.  This
          resource represents a capability or an available location where a device
          can be installed.
        Deferring: The element does not process any commands but queues new requests.
        Degraded: The function or resource is degraded.
        Disabled: This function or resource is disabled.
        Enabled: This function or resource is enabled.
        InTest: This function or resource is undergoing testing or is in the process
          of capturing information for debugging.
        Qualified: The element quality is within the acceptable range of operation.
        Quiesced: The element is enabled but only processes a restricted set of commands.
        StandbyOffline: This function or resource is enabled but awaits an external
          action to activate it.
        StandbySpare: This function or resource is part of a redundancy set and awaits
          a failover or other external action to activate it.
        Starting: This function or resource is starting.
        UnavailableOffline: This function or resource is present but cannot be used.
        Updating: The element is updating and might be unavailable or degraded.
      x-enumLongDescriptions:
        Absent: This value shall indicate that the function or device is absent as
          defined in the 'Absent resources' clause of the Redfish Specification.
        Deferring: This value shall indicate the element does not process any commands
          but queues new requests.
        Degraded: This value shall indicate the resource is enabled but operating
          in a degraded mode.
        Disabled: This value shall indicate that a function or resource is unavailable.
        Enabled: This value shall indicate that a function or resource is capable
          of operating.
        InTest: This value shall indicate that the component is undergoing testing
          or is in the process of capturing information for debugging.
        Qualified: This value shall indicate the element is within the acceptable
          range of operation.
        Quiesced: This value shall indicate the element is enabled but only processes
          a restricted set of commands.
        StandbyOffline: This value shall indicate that a resource is temporarily unavailable
          but may become available through an external action.
        StandbySpare: This value shall indicate that a resource is unavailable but
          may become available automatically as part of a failover, through an external
          action, or in response to the change in state of another device or resource.
        Starting: This value shall indicate that the resource is attempting to transition
          to `Enabled`.
        UnavailableOffline: This value shall indicate that a function or resource
          is present but not able to be used.
        Updating: This value shall indicate the element is updating.  The element
          may become unavailable or operate at a degraded level of performance or
          functionality.
      x-enumVersionAdded:
        Deferring: v1_2_0
        Degraded: v1_19_0
        Qualified: v1_9_0
        Quiesced: v1_2_0
        UnavailableOffline: v1_1_0
        Updating: v1_2_0
      x-enumVersionDeprecated:
        Qualified: v1_19_0
    Resource_Status:
      additionalProperties: false
      description: The status and health of a resource and its children.
      properties:
        Conditions:
          description: Conditions in this resource that require attention.
          items:
            oneOf:
            - $ref: '#/components/schemas/Resource_Condition'
            - enum:
              - null
          type: array
          x-longDescription: This property shall represent the active conditions requiring
            attention in this or a related resource.  The conditions may affect the
            `Health` or `HealthRollup` of this resource.  The service may roll up
            multiple conditions originating from a resource, using the `ConditionInRelatedResource`
            message from the Base Message Registry.  The array order of conditions
            may change as new conditions occur or as conditions are resolved by the
            service.
          x-versionAdded: v1_11_0
        Health:
          description: The health state of this resource in the absence of its dependent
            resources.
          oneOf:
          - $ref: '#/components/schemas/Resource_Health'
          - enum:
            - null
          readOnly: true
          x-longDescription: This property shall represent the health state of the
            resource without considering its dependent resources.  The values shall
            conform to those defined in the Redfish Specification.
        HealthRollup:
          description: The overall health state from the view of this resource.
          oneOf:
          - $ref: '#/components/schemas/Resource_Health'
          - enum:
            - null
          readOnly: true
          x-longDescription: This property shall represent the health state of the
            resource and its dependent resources.  The values shall conform to those
            defined in the Redfish Specification.  For additional property requirements,
            see the corresponding definition in the Redfish Data Model Specification.
        Oem:
          $ref: '#/components/schemas/Resource_Oem'
          description: The OEM extension property.
          x-longDescription: This property shall contain the OEM extensions.  All
            values for properties contained in this object shall conform to the Redfish
            Specification-described requirements.
        State:
          description: The state of the resource.
          oneOf:
          - $ref: '#/components/schemas/Resource_State'
          - enum:
            - null
          readOnly: true
          x-longDescription: This property shall indicate the state of the resource.
      type: object
      x-longDescription: This type shall contain any status or health properties of
        a resource.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_]*$:
          description: This property shall specify a valid odata or Redfish property.
    Resource_UUID:
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      type: string
title: '#Resource'
x-copyright: Copyright 2014-2025 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright
x-language: en
x-owningEntity: DMTF
